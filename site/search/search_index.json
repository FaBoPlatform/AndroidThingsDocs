{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FaBo Keras Docs FaBo Keras Docs\u306b\u3064\u3044\u3066 FaBo Swift Docs\u306f\u3001Swift\u9006\u5f15\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002 \u4fee\u6b63\u4f9d\u983c\u7b49 Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002 \u305d\u306e\u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 Android Things Docs DonkeyCar Docs Denbun Docs Circuit Docs Swift Docs Keras Docs Things Docs NRF Docs DeviceWebAPI Docs","title":"FaBo Keras Docs"},{"location":"#fabo-keras-docs","text":"","title":"FaBo Keras Docs"},{"location":"#fabo-keras-docs_1","text":"FaBo Swift Docs\u306f\u3001Swift\u9006\u5f15\u304d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002","title":"FaBo Keras Docs\u306b\u3064\u3044\u3066"},{"location":"#_1","text":"Github\u306eRepo\u306b Issues \u3092\u3042\u3052\u308b\u3002","title":"\u4fee\u6b63\u4f9d\u983c\u7b49"},{"location":"#_2","text":"Android Things Docs DonkeyCar Docs Denbun Docs Circuit Docs Swift Docs Keras Docs Things Docs NRF Docs DeviceWebAPI Docs","title":"\u305d\u306e\u4ed6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8"},{"location":"201_3axis/","text":"201 3Axis FaBo 201, 3 Axis. AndroidManifest 2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Board\u306e\u8b58\u5225 BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } 3Axis\u30bb\u30f3\u30b5\u30fc(#201) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoAdx345\" )) { Log . i ( TAG , \"3Axis sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mAdx345AccelerometerDriver = new Adx345AccelerometerDriver ( BoardDefaults . getI2CPort ()); mAdx345AccelerometerDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoAdx345\" )) { Log . i ( TAG , \"Accelerometer event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"201 3Axis"},{"location":"201_3axis/#201-3axis","text":"FaBo 201, 3 Axis.","title":"201 3Axis"},{"location":"201_3axis/#androidmanifest","text":"2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest"},{"location":"201_3axis/#board","text":"BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } }","title":"Board\u306e\u8b58\u5225"},{"location":"201_3axis/#3axis201","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoAdx345\" )) { Log . i ( TAG , \"3Axis sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mAdx345AccelerometerDriver = new Adx345AccelerometerDriver ( BoardDefaults . getI2CPort ()); mAdx345AccelerometerDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoAdx345\" )) { Log . i ( TAG , \"Accelerometer event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"3Axis\u30bb\u30f3\u30b5\u30fc(#201)"},{"location":"203_color/","text":"203 Color FaBo 203, Color. AndroidManifest 2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Board\u306e\u8b58\u5225 BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } Color\u30bb\u30f3\u30b5\u30fc(#203) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mS11059ColorDriver = new S11059ColorDriver ( BoardDefaults . getI2CPort ()); mS11059ColorDriver . register (); Log . i ( TAG , \"mS11059ColorDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ] + \", \" + event . values [ 3 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"203 Color"},{"location":"203_color/#203-color","text":"FaBo 203, Color.","title":"203 Color"},{"location":"203_color/#androidmanifest","text":"2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest"},{"location":"203_color/#board","text":"BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } }","title":"Board\u306e\u8b58\u5225"},{"location":"203_color/#color203","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mS11059ColorDriver = new S11059ColorDriver ( BoardDefaults . getI2CPort ()); mS11059ColorDriver . register (); Log . i ( TAG , \"mS11059ColorDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ] + \", \" + event . values [ 3 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Color\u30bb\u30f3\u30b5\u30fc(#203)"},{"location":"206_uv/","text":"206 UV FaBo 206, UV. AndroidManifest 2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Board\u306e\u8b58\u5225 BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } Color\u30bb\u30f3\u30b5\u30fc(#203) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; import io.fabo.driver.Si1132UVDriver ; public class MainActivity extends Activity implements SensorEventListener { private Si1132UVDriver mSi1132UVDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoSi1132\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mSi1132UVDriver = new Si1132UVDriver ( BoardDefaults . getI2CPort ()); mSi1132UVDriver . register (); Log . i ( TAG , \"mSi1132UVDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mSi1132UVDriver != null ) { mSensorManager . unregisterListener ( this ); mSi1132UVDriver . unregister (); try { mSi1132UVDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mSi1132UVDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoSi1132\" )) { Log . i ( TAG , \"FaBoSi1132\" ); Log . i ( TAG , \"UV Index(0-11): \" + event . values [ 0 ] + \",IR: \" + event . values [ 1 ] + \"(count)\" + \",Visible: \" + event . values [ 2 ] + \"(lux)\" ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"206 UV"},{"location":"206_uv/#206-uv","text":"FaBo 206, UV.","title":"206 UV"},{"location":"206_uv/#androidmanifest","text":"2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest"},{"location":"206_uv/#board","text":"BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } }","title":"Board\u306e\u8b58\u5225"},{"location":"206_uv/#color203","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; import io.fabo.driver.Si1132UVDriver ; public class MainActivity extends Activity implements SensorEventListener { private Si1132UVDriver mSi1132UVDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoSi1132\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mSi1132UVDriver = new Si1132UVDriver ( BoardDefaults . getI2CPort ()); mSi1132UVDriver . register (); Log . i ( TAG , \"mSi1132UVDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mSi1132UVDriver != null ) { mSensorManager . unregisterListener ( this ); mSi1132UVDriver . unregister (); try { mSi1132UVDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mSi1132UVDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoSi1132\" )) { Log . i ( TAG , \"FaBoSi1132\" ); Log . i ( TAG , \"UV Index(0-11): \" + event . values [ 0 ] + \",IR: \" + event . values [ 1 ] + \"(count)\" + \",Visible: \" + event . values [ 2 ] + \"(lux)\" ); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Color\u30bb\u30f3\u30b5\u30fc(#203)"},{"location":"217_ambient/","text":"201 3Axis FaBo 217, Ambient. AndroidManifest 2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Board\u306e\u8b58\u5225 BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } Ambient\u30bb\u30f3\u30b5\u30fc(#217) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_LIGHT ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoISL29034\" )) { Log . i ( TAG , \"Light sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mISL29034AmbientDriver = new ISL29034AmbientDriver ( BoardDefaults . getI2CPort ()); mISL29034AmbientDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoISL29034\" )) { Log . i ( TAG , \"Ambient event: \" + event . values [ 0 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"201 3Axis"},{"location":"217_ambient/#201-3axis","text":"FaBo 217, Ambient.","title":"201 3Axis"},{"location":"217_ambient/#androidmanifest","text":"2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest"},{"location":"217_ambient/#board","text":"BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } }","title":"Board\u306e\u8b58\u5225"},{"location":"217_ambient/#ambient217","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_LIGHT ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoISL29034\" )) { Log . i ( TAG , \"Light sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mISL29034AmbientDriver = new ISL29034AmbientDriver ( BoardDefaults . getI2CPort ()); mISL29034AmbientDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoISL29034\" )) { Log . i ( TAG , \"Ambient event: \" + event . values [ 0 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Ambient\u30bb\u30f3\u30b5\u30fc(#217)"},{"location":"3axis/","text":"3Axis I2C\u306b3Axis\u3092\u63a5\u7d9a\u3057\u3001100ms\u6bce\u306b\u52a0\u901f\u5ea6\u3092\u53d6\u5f97\u3002 \u30bd\u30fc\u30bpackage com.example.vssadmin.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.os.Handler ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.GpioCallback ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x53 ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // Attempt to access the I2C device try { PeripheralManager manager = PeripheralManager . getInstance (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Who am I. byte value = mDevice . readRegByte ( 0x00 ); if (( value & 0xff ) == 0xe5 ) { Log . i ( TAG , \"Device is ADXL345\" ); } // Configure. byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); // PowerOn. byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; Log . i ( TAG , \"x=\" + x + \" y=\" + y + \" z=\" + z ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"3Axis"},{"location":"3axis/#3axis","text":"I2C\u306b3Axis\u3092\u63a5\u7d9a\u3057\u3001100ms\u6bce\u306b\u52a0\u901f\u5ea6\u3092\u53d6\u5f97\u3002","title":"3Axis"},{"location":"3axis/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 package com.example.vssadmin.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.os.Handler ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.GpioCallback ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x53 ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // Attempt to access the I2C device try { PeripheralManager manager = PeripheralManager . getInstance (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Who am I. byte value = mDevice . readRegByte ( 0x00 ); if (( value & 0xff ) == 0xe5 ) { Log . i ( TAG , \"Device is ADXL345\" ); } // Configure. byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); // PowerOn. byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; Log . i ( TAG , \"x=\" + x + \" y=\" + y + \" z=\" + z ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"3axisui/","text":"3Axis I2C\u306b3Axis\u3092\u63a5\u7d9a\u3057\u3001100ms\u6bce\u306b\u52a0\u901f\u5ea6\u3092\u53d6\u5f97\u3002TextView\u3092UI\u306b\u8868\u793a\u3059\u308b\u3002 \u30bd\u30fc\u30b9 Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"DX\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewX\" /> <TextView android:text= \"DY\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewY\" android:layout_below= \"@+id/textViewX\" /> <TextView android:text= \"DZ\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewZ\" android:layout_below= \"@+id/textViewY\" /> </RelativeLayout> Javapackage com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x53 ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; /** TextView */ TextView mTextViewDX ; TextView mTextViewDY ; TextView mTextViewDZ ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextViewDX = ( TextView ) findViewById ( R . id . textViewX ); mTextViewDY = ( TextView ) findViewById ( R . id . textViewY ); mTextViewDZ = ( TextView ) findViewById ( R . id . textViewZ ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Who am I. byte value = mDevice . readRegByte ( 0x00 ); if (( value & 0xff ) == 0xe5 ) { Log . i ( TAG , \"Device is ADXL345\" ); } // Configure. byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); // PowerOn. byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; mTextViewDX . setText ( \"X: \" + x ); mTextViewDY . setText ( \"Y: \" + y ); mTextViewDZ . setText ( \"Z: \" + z ); Log . i ( TAG , \"x=\" + x + \" y=\" + y + \" z=\" + z ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"3Axis"},{"location":"3axisui/#3axis","text":"I2C\u306b3Axis\u3092\u63a5\u7d9a\u3057\u3001100ms\u6bce\u306b\u52a0\u901f\u5ea6\u3092\u53d6\u5f97\u3002TextView\u3092UI\u306b\u8868\u793a\u3059\u308b\u3002","title":"3Axis"},{"location":"3axisui/#_1","text":"Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"DX\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewX\" /> <TextView android:text= \"DY\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewY\" android:layout_below= \"@+id/textViewX\" /> <TextView android:text= \"DZ\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewZ\" android:layout_below= \"@+id/textViewY\" /> </RelativeLayout> Javapackage com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x53 ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; /** TextView */ TextView mTextViewDX ; TextView mTextViewDY ; TextView mTextViewDZ ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextViewDX = ( TextView ) findViewById ( R . id . textViewX ); mTextViewDY = ( TextView ) findViewById ( R . id . textViewY ); mTextViewDZ = ( TextView ) findViewById ( R . id . textViewZ ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Who am I. byte value = mDevice . readRegByte ( 0x00 ); if (( value & 0xff ) == 0xe5 ) { Log . i ( TAG , \"Device is ADXL345\" ); } // Configure. byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); // PowerOn. byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; mTextViewDX . setText ( \"X: \" + x ); mTextViewDY . setText ( \"Y: \" + y ); mTextViewDZ . setText ( \"Z: \" + z ); Log . i ( TAG , \"x=\" + x + \" y=\" + y + \" z=\" + z ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"SUMMARY/","text":"\u306f\u3058\u3081\u306b Android Thins\u306eUpdate Peripheral I/O GPIO Button LED PWM Servo I2C 3Axis 3Axis UI 3Axis UserDriver Color Color UI Color UI2 FaBo Lib \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u8fbc\u3080 #201 3Axis #203 Color #206 UV Index #217 Ambient [#218] UART UART Robot 6DOF RObotARM UI FindViewById UI Layout1 UI Layout2 Button Button\u3068TextView EditText \u96fb\u5353 Intent \u6697\u9ed9\u7684Intent Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c Intent\u3092\u4f5c\u6210\u3059\u308b [WebView] WebView","title":"SUMMARY"},{"location":"button/","text":"Button GPIO22\u306b\u5dee\u3057\u8fbc\u307f\u3001GPIO1_IO10\u3092\u6307\u5b9a \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 package com.example.vssadmin.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.GpioCallback ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio mButtonGpio ; private String PIN_NAME = \"GPIO1_IO10\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); PeripheralManager manager = PeripheralManager . getInstance (); try { mButtonGpio = manager . openGpio ( PIN_NAME ); mButtonGpio . setDirection ( Gpio . DIRECTION_IN ); mButtonGpio . setEdgeTriggerType ( Gpio . EDGE_BOTH ); mButtonGpio . registerGpioCallback ( mCallback ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private GpioCallback mCallback = new GpioCallback () { @Override public boolean onGpioEdge ( Gpio gpio ) { try { if ( gpio . getValue () == true ) { Log . i ( TAG , gpio . getName () + \"\u304c\u62bc\u3055\u308c\u305f\" ); } else { Log . i ( TAG , gpio . getName () + \"\u304c\u96e2\u3055\u308c\u305f\" ); } } catch ( IOException e ) { e . printStackTrace (); } return true ; } }; @Override protected void onDestroy () { super . onDestroy (); if ( mButtonGpio != null ) { mButtonGpio . unregisterGpioCallback ( mCallback ); try { mButtonGpio . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } AndroidManifest.xml\u306b \u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.vssadmin.myapplication\" > <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"Button"},{"location":"button/#button","text":"GPIO22\u306b\u5dee\u3057\u8fbc\u307f\u3001GPIO1_IO10\u3092\u6307\u5b9a","title":"Button"},{"location":"button/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 package com.example.vssadmin.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.GpioCallback ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio mButtonGpio ; private String PIN_NAME = \"GPIO1_IO10\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); PeripheralManager manager = PeripheralManager . getInstance (); try { mButtonGpio = manager . openGpio ( PIN_NAME ); mButtonGpio . setDirection ( Gpio . DIRECTION_IN ); mButtonGpio . setEdgeTriggerType ( Gpio . EDGE_BOTH ); mButtonGpio . registerGpioCallback ( mCallback ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private GpioCallback mCallback = new GpioCallback () { @Override public boolean onGpioEdge ( Gpio gpio ) { try { if ( gpio . getValue () == true ) { Log . i ( TAG , gpio . getName () + \"\u304c\u62bc\u3055\u308c\u305f\" ); } else { Log . i ( TAG , gpio . getName () + \"\u304c\u96e2\u3055\u308c\u305f\" ); } } catch ( IOException e ) { e . printStackTrace (); } return true ; } }; @Override protected void onDestroy () { super . onDestroy (); if ( mButtonGpio != null ) { mButtonGpio . unregisterGpioCallback ( mCallback ); try { mButtonGpio . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } AndroidManifest.xml\u306b \u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.vssadmin.myapplication\" > <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"\u30bd\u30fc\u30b9"},{"location":"color/","text":"Color 203\u3067\u8272\u3092\u53d6\u5f97 \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"Color"},{"location":"color/#color","text":"203\u3067\u8272\u3092\u53d6\u5f97","title":"Color"},{"location":"color/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"colorui/","text":"Color 203\u3067\u8272\u3092\u53d6\u5f97 \u30bd\u30fc\u30b9 Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"R\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewR\" /> <TextView android:text= \"G\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewG\" android:layout_below= \"@+id/textViewR\" /> <TextView android:text= \"B\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewB\" android:layout_below= \"@+id/textViewG\" /> <TextView android:text= \"I\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewI\" android:layout_below= \"@+id/textViewB\" /> </RelativeLayout> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; /** TextView */ TextView mTextViewR ; TextView mTextViewG ; TextView mTextViewB ; TextView mTextViewI ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextViewR = ( TextView ) findViewById ( R . id . textViewR ); mTextViewG = ( TextView ) findViewById ( R . id . textViewG ); mTextViewB = ( TextView ) findViewById ( R . id . textViewB ); mTextViewI = ( TextView ) findViewById ( R . id . textViewI ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); mTextViewR . setText ( \"G: \" + r ); mTextViewG . setText ( \"R: \" + g ); mTextViewB . setText ( \"B: \" + b ); mTextViewI . setText ( \"I: \" + i ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"Color"},{"location":"colorui/#color","text":"203\u3067\u8272\u3092\u53d6\u5f97","title":"Color"},{"location":"colorui/#_1","text":"Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"R\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewR\" /> <TextView android:text= \"G\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewG\" android:layout_below= \"@+id/textViewR\" /> <TextView android:text= \"B\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewB\" android:layout_below= \"@+id/textViewG\" /> <TextView android:text= \"I\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewI\" android:layout_below= \"@+id/textViewB\" /> </RelativeLayout> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; /** TextView */ TextView mTextViewR ; TextView mTextViewG ; TextView mTextViewB ; TextView mTextViewI ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mTextViewR = ( TextView ) findViewById ( R . id . textViewR ); mTextViewG = ( TextView ) findViewById ( R . id . textViewG ); mTextViewB = ( TextView ) findViewById ( R . id . textViewB ); mTextViewI = ( TextView ) findViewById ( R . id . textViewI ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); mTextViewR . setText ( \"G: \" + r ); mTextViewG . setText ( \"R: \" + g ); mTextViewB . setText ( \"B: \" + b ); mTextViewI . setText ( \"I: \" + i ); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"colorui2/","text":"Color 203\u3067\u8272\u3092\u53d6\u5f97 \u30bd\u30fc\u30b9 Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" android:id= \"@+id/layout\" > <TextView android:text= \"R\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewR\" /> <TextView android:text= \"G\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewG\" android:layout_below= \"@+id/textViewR\" /> <TextView android:text= \"B\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewB\" android:layout_below= \"@+id/textViewG\" /> <TextView android:text= \"I\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewI\" android:layout_below= \"@+id/textViewB\" /> </RelativeLayout> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; import android.widget.RelativeLayout ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; /** TextView */ TextView mTextViewR ; TextView mTextViewG ; TextView mTextViewB ; TextView mTextViewI ; RelativeLayout mRelativeLayout ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mRelativeLayout = ( RelativeLayout ) findViewById ( R . id . layout ); mTextViewR = ( TextView ) findViewById ( R . id . textViewR ); mTextViewG = ( TextView ) findViewById ( R . id . textViewG ); mTextViewB = ( TextView ) findViewById ( R . id . textViewB ); mTextViewI = ( TextView ) findViewById ( R . id . textViewI ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); mTextViewR . setText ( \"R: \" + r ); mTextViewG . setText ( \"G: \" + g ); mTextViewB . setText ( \"B: \" + b ); mTextViewI . setText ( \"I: \" + i ); mRelativeLayout . setBackgroundColor ( Color . rgb ( r , g , b )); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"Color"},{"location":"colorui2/#color","text":"203\u3067\u8272\u3092\u53d6\u5f97","title":"Color"},{"location":"colorui2/#_1","text":"Xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" android:id= \"@+id/layout\" > <TextView android:text= \"R\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewR\" /> <TextView android:text= \"G\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewG\" android:layout_below= \"@+id/textViewR\" /> <TextView android:text= \"B\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewB\" android:layout_below= \"@+id/textViewG\" /> <TextView android:text= \"I\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textViewI\" android:layout_below= \"@+id/textViewB\" /> </RelativeLayout> Java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManagerService ; import java.io.IOException ; import android.widget.TextView ; import android.widget.RelativeLayout ; public class MainActivity extends AppCompatActivity { // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final int I2C_ADDRESS = 0x2A ; private static final String TAG = \"THINGS\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_AXIS_MS = 100 ; private I2cDevice mDevice ; /** Who_am_i register */ private byte S11059_CONTROL = 0x00 ; /** Data Format Control */ private byte S11059_DATA_RED_H = 0x03 ; private byte S11059_CTRL_GAIN = 0x08 ; private byte S11059_CTRL_MODE = 0x04 ; private byte S11059_CTRL_TIME_224M = 0x2 ; /** TextView */ TextView mTextViewR ; TextView mTextViewG ; TextView mTextViewB ; TextView mTextViewI ; RelativeLayout mRelativeLayout ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mRelativeLayout = ( RelativeLayout ) findViewById ( R . id . layout ); mTextViewR = ( TextView ) findViewById ( R . id . textViewR ); mTextViewG = ( TextView ) findViewById ( R . id . textViewG ); mTextViewB = ( TextView ) findViewById ( R . id . textViewB ); mTextViewI = ( TextView ) findViewById ( R . id . textViewI ); // Attempt to access the I2C device try { PeripheralManagerService manager = new PeripheralManagerService (); mDevice = manager . openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access I2C device\" , e ); } try { // Setting byte value = mDevice . readRegByte ( S11059_CONTROL ); value |= S11059_CTRL_GAIN ; value &= ~( S11059_CTRL_MODE ); value &= 0xFC ; value |= S11059_CTRL_TIME_224M ; value &= 0x3F ; // RESET off,SLEEP off mDevice . writeRegByte ( S11059_CONTROL , value ); // Handler. mHandler . post ( mAxisRunnable ); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mAxisRunnable = new Runnable () { @Override public void run () { if ( mDevice == null ) { return ; } try { int length = 8 ; byte color_buff [] = new byte [ length ]; mDevice . readRegBuffer ( S11059_DATA_RED_H , color_buff , color_buff . length ); mHandler . postDelayed ( mAxisRunnable , INTERVAL_BETWEEN_AXIS_MS ); int r = ((( int ) color_buff [ 0 ]) << 8 ) | color_buff [ 1 ]; int g = ((( int ) color_buff [ 2 ]) << 8 ) | color_buff [ 3 ]; int b = ((( int ) color_buff [ 4 ]) << 8 ) | color_buff [ 5 ]; int i = ((( int ) color_buff [ 6 ]) << 8 ) | color_buff [ 7 ]; Log . i ( TAG , \"r=\" + r + \" g=\" + g + \" b=\" + b + \" i=\" + i ); mTextViewR . setText ( \"R: \" + r ); mTextViewG . setText ( \"G: \" + g ); mTextViewB . setText ( \"B: \" + b ); mTextViewI . setText ( \"I: \" + i ); mRelativeLayout . setBackgroundColor ( Color . rgb ( r , g , b )); } catch ( IOException e ) { Log . e ( TAG , \"Error on I2C Device API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close I2C device\" , e ); } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"intent00/","text":"Intent \u6697\u9ed9\u7684Intent \u660e\u793a\u7684Intent Intent\u3092\u4f5c\u6210\u3059\u308b","title":"Intent"},{"location":"intent00/#intent","text":"\u6697\u9ed9\u7684Intent \u660e\u793a\u7684Intent Intent\u3092\u4f5c\u6210\u3059\u308b","title":"Intent"},{"location":"intent01/","text":"\u6697\u9ed9\u7684Intent \u6697\u9ed9\u7684Intent\u3067\u306f\u3001\u4e0b\u8a18\u306e4\u9805\u76ee\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308bActivity\u3092\u8d77\u52d5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 ACTION CATEGORY DATA TYPE MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); startActivity ( testIntent ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> Intent.ACTION_VIEW MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); startActivity ( testIntent ); ACTION_DIAL MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); startActivity ( testIntent ); Action\u3068Category\u3092\u6307\u5b9a MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_DEFAULT ); startActivity ( testIntent ); Action\u3068Category\u3092\u6307\u5b9a MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_LAUNCHER ); startActivity ( testIntent ); ACTION\u3068DATA\u3092\u6307\u5b9a Browser\u3092\u8d77\u52d5 MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); testIntent . setData ( uri ); startActivity ( testIntent ); Map\u3092\u8d77\u52d5(\u7def\u5ea6/\u7d4c\u5ea6) MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:35.658625,139.745415\" ); testIntent . setData ( uri ); startActivity ( testIntent ); Map\u3092\u8d77\u52d5(\u691c\u7d22\u30ef\u30fc\u30c9) MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:0,0?q=sendai\" ); testIntent . setData ( uri ); startActivity ( testIntent ); \u524a\u9664 \u81ea\u5206\u81ea\u8eab\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3059\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DELETE ); Uri uri = Uri . fromParts ( \"package\" , \"utsunomiya.gclue.com.intentsample\" , null ); testIntent . setData ( uri ); startActivity ( testIntent ); \u96fb\u8a71\u3092\u304b\u3051\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); Uri uri = Uri . parse ( \"tel:11111111111111\" ); testIntent . setData ( uri ); startActivity ( testIntent ); \u30e1\u30fc\u30eb\u3092\u9001\u308b MainActivity.java 1 2 3 4 5 6 7 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SENDTO ); Uri uri = Uri . parse ( \"mailto:test@gclue.jp\" ); testIntent . setData ( uri ); testIntent . putExtra ( Intent . EXTRA_SUBJECT , \"Subject\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Text of main\" ); startActivity ( testIntent ); \u691c\u7d22\u306e\u6a5f\u80fd\u3092\u3082\u3063\u305f\u30a2\u30d7\u30ea\u3092\u63a2\u3059 MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEARCH ); testIntent . putExtra ( \"query\" , \"Android\" ); startActivity ( testIntent ); \u6587\u5b57\u5217\u3092\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u6e21\u3059 MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEND ); testIntent . setType ( \"text/plain\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Data sending\" ); startActivity ( testIntent ); Reference http://developer.android.com/intl/ja/reference/android/content/Intent.html","title":"\u6697\u9ed9\u7684Intent"},{"location":"intent01/#intent","text":"\u6697\u9ed9\u7684Intent\u3067\u306f\u3001\u4e0b\u8a18\u306e4\u9805\u76ee\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308bActivity\u3092\u8d77\u52d5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 ACTION CATEGORY DATA TYPE MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); startActivity ( testIntent ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u6697\u9ed9\u7684Intent"},{"location":"intent01/#intentaction_view","text":"MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); startActivity ( testIntent );","title":"Intent.ACTION_VIEW"},{"location":"intent01/#action_dial","text":"MainActivity.java 1 2 3 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); startActivity ( testIntent );","title":"ACTION_DIAL"},{"location":"intent01/#actioncategory","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_DEFAULT ); startActivity ( testIntent );","title":"Action\u3068Category\u3092\u6307\u5b9a"},{"location":"intent01/#actioncategory_1","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_MAIN ); testIntent . addCategory ( Intent . CATEGORY_LAUNCHER ); startActivity ( testIntent );","title":"Action\u3068Category\u3092\u6307\u5b9a"},{"location":"intent01/#actiondata","text":"","title":"ACTION\u3068DATA\u3092\u6307\u5b9a"},{"location":"intent01/#browser","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Browser\u3092\u8d77\u52d5"},{"location":"intent01/#map","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:35.658625,139.745415\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Map\u3092\u8d77\u52d5(\u7def\u5ea6/\u7d4c\u5ea6)"},{"location":"intent01/#map_1","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_VIEW ); Uri uri = Uri . parse ( \"geo:0,0?q=sendai\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"Map\u3092\u8d77\u52d5(\u691c\u7d22\u30ef\u30fc\u30c9)"},{"location":"intent01/#_1","text":"\u81ea\u5206\u81ea\u8eab\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3059\u308b MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DELETE ); Uri uri = Uri . fromParts ( \"package\" , \"utsunomiya.gclue.com.intentsample\" , null ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"\u524a\u9664"},{"location":"intent01/#_2","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_DIAL ); Uri uri = Uri . parse ( \"tel:11111111111111\" ); testIntent . setData ( uri ); startActivity ( testIntent );","title":"\u96fb\u8a71\u3092\u304b\u3051\u308b"},{"location":"intent01/#_3","text":"MainActivity.java 1 2 3 4 5 6 7 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SENDTO ); Uri uri = Uri . parse ( \"mailto:test@gclue.jp\" ); testIntent . setData ( uri ); testIntent . putExtra ( Intent . EXTRA_SUBJECT , \"Subject\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Text of main\" ); startActivity ( testIntent );","title":"\u30e1\u30fc\u30eb\u3092\u9001\u308b"},{"location":"intent01/#_4","text":"MainActivity.java 1 2 3 4 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEARCH ); testIntent . putExtra ( \"query\" , \"Android\" ); startActivity ( testIntent );","title":"\u691c\u7d22\u306e\u6a5f\u80fd\u3092\u3082\u3063\u305f\u30a2\u30d7\u30ea\u3092\u63a2\u3059"},{"location":"intent01/#_5","text":"MainActivity.java 1 2 3 4 5 Intent testIntent = new Intent (); testIntent . setAction ( Intent . ACTION_SEND ); testIntent . setType ( \"text/plain\" ); testIntent . putExtra ( Intent . EXTRA_TEXT , \"Data sending\" ); startActivity ( testIntent );","title":"\u6587\u5b57\u5217\u3092\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u6e21\u3059"},{"location":"intent01/#reference","text":"http://developer.android.com/intl/ja/reference/android/content/Intent.html","title":"Reference"},{"location":"intent03/","text":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import java.io.File ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ImageView */ private ImageView mImageView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_IMAGE_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mImageView = ( ImageView ) findViewById ( R . id . imageView ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ // Action\u540d ACTION_IMAGE_CAPTURE\u306e\u30a4\u30f3\u30c6\u30f3\u30c8\u3092\u767a\u884c Intent takePictureIntent = new Intent ( MediaStore . ACTION_IMAGE_CAPTURE ); if ( takePictureIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takePictureIntent , REQUEST_IMAGE_CAPTURE ); } } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { // requestCode\u304cREQUEST_IMAGE_CAPTURE\u306a\u3089\u753b\u9762\u306b\u8cbc\u308a\u4ed8\u3051\u308b if ( requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK ) { Bundle extras = data . getExtras (); Bitmap imageBitmap = ( Bitmap ) extras . get ( \"data\" ); mImageView . setImageBitmap ( imageBitmap ); } } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <ImageView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/imageView\" /> </RelativeLayout>","title":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c"},{"location":"intent03/#intent","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import java.io.File ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ImageView */ private ImageView mImageView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_IMAGE_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mImageView = ( ImageView ) findViewById ( R . id . imageView ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )){ // Action\u540d ACTION_IMAGE_CAPTURE\u306e\u30a4\u30f3\u30c6\u30f3\u30c8\u3092\u767a\u884c Intent takePictureIntent = new Intent ( MediaStore . ACTION_IMAGE_CAPTURE ); if ( takePictureIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takePictureIntent , REQUEST_IMAGE_CAPTURE ); } } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { // requestCode\u304cREQUEST_IMAGE_CAPTURE\u306a\u3089\u753b\u9762\u306b\u8cbc\u308a\u4ed8\u3051\u308b if ( requestCode == REQUEST_IMAGE_CAPTURE && resultCode == RESULT_OK ) { Bundle extras = data . getExtras (); Bitmap imageBitmap = ( Bitmap ) extras . get ( \"data\" ); mImageView . setImageBitmap ( imageBitmap ); } } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <ImageView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/imageView\" /> </RelativeLayout>","title":"Intent\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c"},{"location":"intent04/","text":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Play\" android:id= \"@+id/buttonPlay\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/button\" /> <VideoView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/videoView\" /> </RelativeLayout> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ButtonPlay. */ private Button mButtonPlay ; /** VideoView */ private VideoView mVideoView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_VIDEO_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButton . setOnClickListener ( this ); mButtonPlay . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mVideoView = ( VideoView ) findViewById ( R . id . videoView ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent takeVideoIntent = new Intent ( MediaStore . ACTION_VIDEO_CAPTURE ); if ( takeVideoIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takeVideoIntent , REQUEST_VIDEO_CAPTURE ); } } else if ( v . equals ( mButtonPlay )) { mVideoView . start (); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_VIDEO_CAPTURE && resultCode == RESULT_OK ) { Uri mVideoUri = data . getData (); mVideoView . setVideoURI ( mVideoUri ); mVideoView . setVisibility ( View . VISIBLE ); } } }","title":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c"},{"location":"intent04/#intent","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Play\" android:id= \"@+id/buttonPlay\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/button\" /> <VideoView android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:id= \"@+id/videoView\" /> </RelativeLayout> MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** ButtonPlay. */ private Button mButtonPlay ; /** VideoView */ private VideoView mVideoView ; /** \u5199\u771f\u64ae\u5f71\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_VIDEO_CAPTURE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButtonPlay = ( Button ) findViewById ( R . id . buttonPlay ); mButton . setOnClickListener ( this ); mButtonPlay . setOnClickListener ( this ); // xml\u304b\u3089ImageView\u3092\u53d6\u308a\u8fbc\u3080 mVideoView = ( VideoView ) findViewById ( R . id . videoView ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent takeVideoIntent = new Intent ( MediaStore . ACTION_VIDEO_CAPTURE ); if ( takeVideoIntent . resolveActivity ( getPackageManager ()) != null ) { startActivityForResult ( takeVideoIntent , REQUEST_VIDEO_CAPTURE ); } } else if ( v . equals ( mButtonPlay )) { mVideoView . start (); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_VIDEO_CAPTURE && resultCode == RESULT_OK ) { Uri mVideoUri = data . getData (); mVideoView . setVideoURI ( mVideoUri ); mVideoView . setVisibility ( View . VISIBLE ); } } }","title":"Intent\u3067\u30d3\u30c7\u30aa\u3092\u64cd\u4f5c"},{"location":"intent05/","text":"Intent\u3092\u4f5c\u6210\u3059\u308b Intent\u3092\u547c\u3073\u51fa\u3059\u624b\u6bb5 \u660e\u793a\u7684\u306aIntent\u8d77\u52d5 \u6697\u9ed9\u7684\u306aIntent\u8d77\u52d5 \u304c\u3042\u308a\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u8d77\u52d5\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u660e\u793a\u7684 1 2 3 Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.example.intentcooperationsample\" , \"com.example.intentcooperationsample.MyActivity\" ); startActivityForResult ( selectIntent , 1 ); \u6697\u9ed9\u7684 1 2 3 Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); Intent browserIntent = new Intent ( Intent . ACTION_VIEW , uri ); startActivity ( browserIntent ); AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Intenr-filter\u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b 1 2 3 4 5 & lt ; intent-filter & gt ; & lt ; action android : name = \"android.intent.action.MAIN\" /& gt ; & lt ; category android : name = \"android.intent.category.LAUNCHER\" /& gt ; & lt ;/ intent-filter & gt ; \u547c\u3073\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \u547c\u3073\u51fa\u3057\u5074 Intent\u306e\u8a18\u8ff0 1 2 Intent mIntent = new Intent(); mIntent.setAction(\"\u30a2\u30af\u30b7\u30e7\u30f3\u540d\"); Activity\u3092\u547c\u3073\u51fa\u3059 - startActivity(\u30a4\u30f3\u30c6\u30f3\u30c8) - startActivityForResult(\u30a4\u30f3\u30c6\u30f3\u30c8) Service\u3092\u547c\u3073\u51fa\u3059 - startService(\u30a4\u30f3\u30c6\u30f3\u30c8) Broadcast - sendBroadcast(\u30a4\u30f3\u30c6\u30f3\u30c8) \u53d7\u4fe1\u5074Activity\u3092\u4f5c\u6210\u3059\u308b IntentActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; public class IntentActivity extends Activity implements View . OnClickListener { /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button mButtonBack ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . intent_activity ); mButtonBack = ( Button ) findViewById ( R . id . buttonBack ); mButtonBack . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButtonBack )){ Intent myIntent = new Intent (); myIntent . putExtra ( \"RESULT\" , \"result of Intent\" ); setResult ( 1 , myIntent ); this . finish (); } } } intent_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> \u9001\u4fe1\u5074 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** \u30a4\u30f3\u30c6\u30f3\u30c8\u547c\u3073\u51fa\u3057\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_INTENT_SAMPLE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent mIntent = new Intent (); mIntent . putExtra ( \"MYVALUE\" , \"Value of mine\" ); mIntent . setClassName ( \"utsunomiya.gclue.com.intentsample\" , \"utsunomiya.gclue.com.intentsample.IntentActivity\" ); startActivityForResult ( mIntent , REQUEST_INTENT_SAMPLE ); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_INTENT_SAMPLE && resultCode == RESULT_OK ) { String result = data . getStringExtra ( \"RESULT\" ); Toast . makeText ( this , \"Result:\" + result , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout> AndroidManifest\u306e\u8a2d\u5b9a AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".IntentActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.DEFAULT\" /> </intent-filter> </activity> </application> </manifest>","title":"Intent\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#intent","text":"Intent\u3092\u547c\u3073\u51fa\u3059\u624b\u6bb5 \u660e\u793a\u7684\u306aIntent\u8d77\u52d5 \u6697\u9ed9\u7684\u306aIntent\u8d77\u52d5 \u304c\u3042\u308a\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u8d77\u52d5\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u660e\u793a\u7684\u306aIntent\u3067\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u660e\u793a\u7684 1 2 3 Intent selectIntent = new Intent (); selectIntent . setClassName ( \"com.example.intentcooperationsample\" , \"com.example.intentcooperationsample.MyActivity\" ); startActivityForResult ( selectIntent , 1 ); \u6697\u9ed9\u7684 1 2 3 Uri uri = Uri . parse ( \"http://www.gclue.com/\" ); Intent browserIntent = new Intent ( Intent . ACTION_VIEW , uri ); startActivity ( browserIntent ); AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Intenr-filter\u30bf\u30b0\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b 1 2 3 4 5 & lt ; intent-filter & gt ; & lt ; action android : name = \"android.intent.action.MAIN\" /& gt ; & lt ; category android : name = \"android.intent.category.LAUNCHER\" /& gt ; & lt ;/ intent-filter & gt ;","title":"Intent\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#_1","text":"","title":"\u547c\u3073\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9"},{"location":"intent05/#_2","text":"Intent\u306e\u8a18\u8ff0 1 2 Intent mIntent = new Intent(); mIntent.setAction(\"\u30a2\u30af\u30b7\u30e7\u30f3\u540d\"); Activity\u3092\u547c\u3073\u51fa\u3059 - startActivity(\u30a4\u30f3\u30c6\u30f3\u30c8) - startActivityForResult(\u30a4\u30f3\u30c6\u30f3\u30c8) Service\u3092\u547c\u3073\u51fa\u3059 - startService(\u30a4\u30f3\u30c6\u30f3\u30c8) Broadcast - sendBroadcast(\u30a4\u30f3\u30c6\u30f3\u30c8)","title":"\u547c\u3073\u51fa\u3057\u5074"},{"location":"intent05/#activity","text":"IntentActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.Intent ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; public class IntentActivity extends Activity implements View . OnClickListener { /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button mButtonBack ; @Override public void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . intent_activity ); mButtonBack = ( Button ) findViewById ( R . id . buttonBack ); mButtonBack . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButtonBack )){ Intent myIntent = new Intent (); myIntent . putExtra ( \"RESULT\" , \"result of Intent\" ); setResult ( 1 , myIntent ); this . finish (); } } } intent_activity.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u53d7\u4fe1\u5074Activity\u3092\u4f5c\u6210\u3059\u308b"},{"location":"intent05/#_3","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 package utsunomiya.gclue.com.intentsample ; import android.app.Activity ; import android.content.ContentResolver ; import android.content.ContentValues ; import android.content.Intent ; import android.graphics.Bitmap ; import android.graphics.BitmapFactory ; import android.net.Uri ; import android.os.Bundle ; import android.os.Environment ; import android.provider.MediaStore ; import android.util.Log ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.widget.Button ; import android.widget.ImageView ; import android.widget.Toast ; import android.widget.VideoView ; import java.io.File ; import java.io.IOException ; import java.text.SimpleDateFormat ; import java.util.Date ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton ; /** \u30a4\u30f3\u30c6\u30f3\u30c8\u547c\u3073\u51fa\u3057\u6642\u306eRquestCode(\u4efb\u610f\u306e\u5024). */ static final int REQUEST_INTENT_SAMPLE = 1 ; /** TAG. */ private final String TAG = \"INTENT\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // xml\u304b\u3089Button\u3092\u53d6\u308a\u8fbc\u3080 mButton = ( Button ) findViewById ( R . id . button ); mButton . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton )) { Intent mIntent = new Intent (); mIntent . putExtra ( \"MYVALUE\" , \"Value of mine\" ); mIntent . setClassName ( \"utsunomiya.gclue.com.intentsample\" , \"utsunomiya.gclue.com.intentsample.IntentActivity\" ); startActivityForResult ( mIntent , REQUEST_INTENT_SAMPLE ); } } @Override protected void onActivityResult ( int requestCode , int resultCode , Intent data ) { if ( requestCode == REQUEST_INTENT_SAMPLE && resultCode == RESULT_OK ) { String result = data . getStringExtra ( \"RESULT\" ); Toast . makeText ( this , \"Result:\" + result , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Intent Sample\" android:id= \"@+id/button\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> </RelativeLayout>","title":"\u9001\u4fe1\u5074"},{"location":"intent05/#androidmanifest","text":"AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.intentsample\" > <uses-feature android:name= \"android.hardware.camera\" android:required= \"true\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> <activity android:name= \".IntentActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.DEFAULT\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest\u306e\u8a2d\u5b9a"},{"location":"led/","text":"LED GPIO22\u306bLED\u30d6\u30ea\u30c3\u30af\u3092\u63a5\u7d9a\u3057\u3001GPIO1_IO10\u3092\u6307\u5b9a 1\u79d2\u3054\u3068\u306bLED\u3092\u70b9\u6ec5\u3002 \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 import android.app.Activity ; import android.os.Handler ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio mLedGpio ; private String PIN_NAME = \"GPIO1_IO10\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private Boolean trigger = false ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); try { mLedGpio = PeripheralManager . getInstance (). openGpio ( PIN_NAME ); mLedGpio . setDirection ( Gpio . DIRECTION_OUT_INITIALLY_LOW ); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { if ( mLedGpio == null ) { return ; } try { trigger = ! trigger ; mLedGpio . setValue (! mLedGpio . getValue ()); mHandler . postDelayed ( mBlinkRunnable , INTERVAL_BETWEEN_BLINKS_MS ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mLedGpio != null ) { try { mLedGpio . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } AndroidManifest.xml\u306b \u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.vssadmin.myapplication\" > <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"LED"},{"location":"led/#led","text":"GPIO22\u306bLED\u30d6\u30ea\u30c3\u30af\u3092\u63a5\u7d9a\u3057\u3001GPIO1_IO10\u3092\u6307\u5b9a 1\u79d2\u3054\u3068\u306bLED\u3092\u70b9\u6ec5\u3002","title":"LED"},{"location":"led/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 import android.app.Activity ; import android.os.Handler ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio mLedGpio ; private String PIN_NAME = \"GPIO1_IO10\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private Boolean trigger = false ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); try { mLedGpio = PeripheralManager . getInstance (). openGpio ( PIN_NAME ); mLedGpio . setDirection ( Gpio . DIRECTION_OUT_INITIALLY_LOW ); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { if ( mLedGpio == null ) { return ; } try { trigger = ! trigger ; mLedGpio . setValue (! mLedGpio . getValue ()); mHandler . postDelayed ( mBlinkRunnable , INTERVAL_BETWEEN_BLINKS_MS ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } }; @Override protected void onDestroy () { super . onDestroy (); if ( mLedGpio != null ) { try { mLedGpio . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } AndroidManifest.xml\u306b \u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.example.vssadmin.myapplication\" > <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"\u30bd\u30fc\u30b9"},{"location":"lib/","text":"FaBo libtary FaBo\u306eModule\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001Github\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002 https://github.com/FaBoPlatform/AndroidThingsDriver/tree/master/driver/src/main/java/io/fabo/driver Gradle\u306e\u7de8\u96c6 1 maven { url 'https://jitpack.io' } 1 2 3 4 5 6 7 allprojects { repositories { google() jcenter() maven { url 'https://jitpack.io' } } } 1 implementation 'com.github.FaBoPlatform:AndroidThingsDriver:0.3' 1 2 3 4 5 6 7 8 9 dependencies { implementation fileTree(dir: 'libs', include: ['*.jar']) implementation 'com.android.support.constraint:constraint-layout:1.1.3' testImplementation 'junit:junit:4.12' androidTestImplementation 'com.android.support.test:runner:1.0.2' androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2' compileOnly 'com.google.android.things:androidthings:+' implementation 'com.github.FaBoPlatform:AndroidThingsDriver:0.3' } AndroidManifest 2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> Board\u306e\u8b58\u5225 BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } Color\u30bb\u30f3\u30b5\u30fc(#203) MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mS11059ColorDriver = new S11059ColorDriver ( BoardDefaults . getI2CPort ()); mS11059ColorDriver . register (); Log . i ( TAG , \"mS11059ColorDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ] + \", \" + event . values [ 3 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"FaBo libtary"},{"location":"lib/#fabo-libtary","text":"FaBo\u306eModule\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001Github\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002 https://github.com/FaBoPlatform/AndroidThingsDriver/tree/master/driver/src/main/java/io/fabo/driver","title":"FaBo libtary"},{"location":"lib/#gradle","text":"1 maven { url 'https://jitpack.io' } 1 2 3 4 5 6 7 allprojects { repositories { google() jcenter() maven { url 'https://jitpack.io' } } } 1 implementation 'com.github.FaBoPlatform:AndroidThingsDriver:0.3' 1 2 3 4 5 6 7 8 9 dependencies { implementation fileTree(dir: 'libs', include: ['*.jar']) implementation 'com.android.support.constraint:constraint-layout:1.1.3' testImplementation 'junit:junit:4.12' androidTestImplementation 'com.android.support.test:runner:1.0.2' androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2' compileOnly 'com.google.android.things:androidthings:+' implementation 'com.github.FaBoPlatform:AndroidThingsDriver:0.3' }","title":"Gradle\u306e\u7de8\u96c6"},{"location":"lib/#androidmanifest","text":"2\u3064\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a18\u8f09\u3059\u308b\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"io.fabo.test\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"AndroidManifest"},{"location":"lib/#board","text":"BoardDefaults.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package io.fabo.test ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } }","title":"Board\u306e\u8b58\u5225"},{"location":"lib/#color203","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 package io.fabo.test ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; import io.fabo.driver.Adx345AccelerometerDriver ; import io.fabo.driver.ISL29034AmbientDriver ; import io.fabo.driver.S11059ColorDriver ; public class MainActivity extends Activity implements SensorEventListener { private S11059ColorDriver mS11059ColorDriver ; private SensorManager mSensorManager ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { Log . i ( TAG , \"Connected\" ); Log . i ( TAG , \"sensor.getType():\" + sensor . getType ()); Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getType () == Sensor . TYPE_DEVICE_PRIVATE_BASE ) { Log . i ( TAG , \"sensor.getName():\" + sensor . getName ()); if ( sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } } }); try { mS11059ColorDriver = new S11059ColorDriver ( BoardDefaults . getI2CPort ()); mS11059ColorDriver . register (); Log . i ( TAG , \"mS11059ColorDriver driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mS11059ColorDriver != null ) { mSensorManager . unregisterListener ( this ); mS11059ColorDriver . unregister (); try { mS11059ColorDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mS11059ColorDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"event.sensor.getName()=\" + event . sensor . getName ()); if ( event . sensor . getName (). startsWith ( \"FaBoS11059\" )) { Log . i ( TAG , \"Color event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ] + \", \" + event . values [ 3 ]); } } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } }","title":"Color\u30bb\u30f3\u30b5\u30fc(#203)"},{"location":"peripheral/","text":"Peripheral GPIO(RaspberryPi) |\u540d\u79f0|RaspPi3|RaspPi3(Things)|PICO7|| |:--|:--|:--|:--| |1|3.3V|3.3V|3.3V|| |2|5V|5V|5V|| |3|I2C1(SDA)|BCM2|I2C1(SDA)|| |4|5V|5V|5V|| |5|I2C1(SCL)|BCM3|I2C1(SCL)|| |6|GND|GND|GND|| |7|GPIO4|BCM4|UART6(RTS)|| |8|RESV|BCM14|UART6(TXD)|| |9|GND|GND|GND|| |10|RESV|BCM15|UART6(RXD|| |11|GPIO17|BCM17|UART6(CTS)|| |12|GPIO18|BCM18|PWM1|| |13|GPIO27|BCM27|GPIO_35|| |14|GND|GND|GND|| |15|GPIO22|BCM22|GPIO_10|| |16|GPIO23|BCM23|GPIO_173(1.8V)|| |17|3.3V|3.3V|3.3V|| |18|GPIO25|BCM24|GPIO_172(1.8V)|| |19|SPI0(MOSI)|BCM10|SPI3(MOSI)|| |20|GND|GND|GND|| |21|SPI0(MISO)|BCM9|SPI3(MISO)|| |22|GPIO25|BCM25|GPIO_128|| |23|SPI0(SCLK)|BCM11|SPI(SCLK)|| |24|SPI0(CS0)|BCM8|SPI3(SS1)|| |25|GND|GND|GND|| |26|SPI0(CS1)|BCM7|SPI3(SS0)|| |27|RESV|||| |28|RESV|||| |29|GPIO5|BCM5|GPIO_33|| |30|GND|GND|GND|| |31|GPIO6|BCM6|GPIO_34|| |32|GPIO12|BCM12||| |33|GPIO13|BCM13|PWM2|| |34|GND|GND||| |35|GPIO19|BCM19|GPIO_32|| |36|GPIO16|BCM16|GPIO_39|| |37|GPIO26|BCM26|GPIO_37|| |38|GPIO20|BCM20|GPIO_175(1.8V)|| |39|GND|GND|GND|| |40|GPIO21|BCM21|GPIO_174(1.8V)|| PWM \u540d\u79f0 PWM0 PWM1 SPI \u540d\u79f0 SPI0.0 SPI0.1 I2C \u540d\u79f0 I2C1 UART \u540d\u79f0 UART0 UART1 I2S \u540d\u79f0 I2S1","title":"Peripheral"},{"location":"peripheral/#peripheral","text":"","title":"Peripheral"},{"location":"peripheral/#gpioraspberrypi","text":"|\u540d\u79f0|RaspPi3|RaspPi3(Things)|PICO7|| |:--|:--|:--|:--| |1|3.3V|3.3V|3.3V|| |2|5V|5V|5V|| |3|I2C1(SDA)|BCM2|I2C1(SDA)|| |4|5V|5V|5V|| |5|I2C1(SCL)|BCM3|I2C1(SCL)|| |6|GND|GND|GND|| |7|GPIO4|BCM4|UART6(RTS)|| |8|RESV|BCM14|UART6(TXD)|| |9|GND|GND|GND|| |10|RESV|BCM15|UART6(RXD|| |11|GPIO17|BCM17|UART6(CTS)|| |12|GPIO18|BCM18|PWM1|| |13|GPIO27|BCM27|GPIO_35|| |14|GND|GND|GND|| |15|GPIO22|BCM22|GPIO_10|| |16|GPIO23|BCM23|GPIO_173(1.8V)|| |17|3.3V|3.3V|3.3V|| |18|GPIO25|BCM24|GPIO_172(1.8V)|| |19|SPI0(MOSI)|BCM10|SPI3(MOSI)|| |20|GND|GND|GND|| |21|SPI0(MISO)|BCM9|SPI3(MISO)|| |22|GPIO25|BCM25|GPIO_128|| |23|SPI0(SCLK)|BCM11|SPI(SCLK)|| |24|SPI0(CS0)|BCM8|SPI3(SS1)|| |25|GND|GND|GND|| |26|SPI0(CS1)|BCM7|SPI3(SS0)|| |27|RESV|||| |28|RESV|||| |29|GPIO5|BCM5|GPIO_33|| |30|GND|GND|GND|| |31|GPIO6|BCM6|GPIO_34|| |32|GPIO12|BCM12||| |33|GPIO13|BCM13|PWM2|| |34|GND|GND||| |35|GPIO19|BCM19|GPIO_32|| |36|GPIO16|BCM16|GPIO_39|| |37|GPIO26|BCM26|GPIO_37|| |38|GPIO20|BCM20|GPIO_175(1.8V)|| |39|GND|GND|GND|| |40|GPIO21|BCM21|GPIO_174(1.8V)||","title":"GPIO(RaspberryPi)"},{"location":"peripheral/#pwm","text":"\u540d\u79f0 PWM0 PWM1","title":"PWM"},{"location":"peripheral/#spi","text":"\u540d\u79f0 SPI0.0 SPI0.1","title":"SPI"},{"location":"peripheral/#i2c","text":"\u540d\u79f0 I2C1","title":"I2C"},{"location":"peripheral/#uart","text":"\u540d\u79f0 UART0 UART1","title":"UART"},{"location":"peripheral/#i2s","text":"\u540d\u79f0 I2S1","title":"I2S"},{"location":"robotarm/","text":"RobotARM 6DOF RobotARM\u306e\u5236\u5fa1 \u30bd\u30fc\u30bpackage com.gclue.restfullarm ; import android.app.Activity ; import android.os.Handler ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; import static java.lang.Math.* ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio [] mLedGpio = new Gpio [ 5 ]; private String [] PIN_NAME = { \"BCM4\" , \"BCM5\" , \"BCM6\" , \"BCM12\" , \"BCM21\" }; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private Boolean trigger = false ; private I2cDevice mDevice ; // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final double OSC_CLOCK = 25000000.0 ; private static final int I2C_ADDRESS = 0x40 ; private static final int MODE1 = 0x00 ; // Mode register 1 private static final int MODE2 = 0x01 ; // Mode register 2 private static final int ALL_LED_ON_L = 0xFA ; // load all the LEDn_ON registers, byte 0 private static final int ALL_LED_ON_H = 0xFB ; // load all the LEDn_ON registers, byte 1 private static final int ALL_LED_OFF_L = 0xFC ; // load all the LEDn_OFF registers, byte 0 private static final int ALL_LED_OFF_H = 0xFD ; // load all the LEDn_OFF registers, byte 1 private static final int ALLCALL = 0x01 ; private static final int OUTDRV = 0x04 ; // 2bit private static final int SLEEP = 0x10 ; private static final int PRE_SCALE = 0xFE ; // prescaler for PWM output frequency private static final int RESTART = 0x80 ; private static final int LED0_ON_L = 0x06 ; private static final int LED0_ON_H = 0x07 ; private static final int LED0_OFF_L = 0x08 ; private static final int LED0_OFF_H = 0x09 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); try { for ( int i = 0 ; i < mLedGpio . length ; i ++) { mLedGpio [ i ] = PeripheralManager . getInstance (). openGpio ( PIN_NAME [ i ]); mLedGpio [ i ]. setDirection ( Gpio . DIRECTION_OUT_INITIALLY_LOW ); } mDevice = PeripheralManager . getInstance (). openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); init (); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private void init () { // \u901a\u96fb\u6642\u3001PCA9685\u306e\u5168channle\u306e\u5024\u306f\u3001\u30b5\u30fc\u30dc\u7a3c\u50cd\u7bc4\u56f2\u5916\u306e4096\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092\u9069\u5207\u306a\u7bc4\u56f2\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f int default_value = 300 ; try { set_all_pwm ( 0 , 0 ); /*mDevice.writeRegByte(ALL_LED_ON_L,(byte)0x00); mDevice.writeRegByte(ALL_LED_ON_H,(byte)0x00); mDevice.writeRegByte(ALL_LED_OFF_L,(byte)(default_value & (byte)0xFF)); mDevice.writeRegByte(ALL_LED_OFF_H,(byte)(default_value >> 8));*/ mDevice . writeRegByte ( MODE2 ,( byte )( OUTDRV )); mDevice . writeRegByte ( MODE1 ,( byte )( ALLCALL )); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } // \u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u306a\u3089\u89e3\u9664\u3059\u308b byte mode = mDevice . readRegByte ( MODE1 ); mode = ( byte ) ( mode & ~ SLEEP ); // SLEEP\u30d3\u30c3\u30c8\u3092\u9664\u53bb\u3059\u308b mDevice . writeRegByte ( MODE1 , mode ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } catch ( IOException e ) { e . printStackTrace (); } } private void set_hz ( int hz ){ //int prescale = calc_prescale(hz); double prescaleval = 25000000.0 ; // # 25MHz prescaleval /= 4096.0 ; // # 12-bit prescaleval /= ( float ) hz ; prescaleval -= 1.0 ; int prescale = ( int )( Math . floor ( prescaleval + 0.5 )); byte oldmode = 0 ; try { oldmode = mDevice . readRegByte ( MODE1 ); Log . i ( TAG , \"oldmode:\" + oldmode ); byte newmode = ( byte ) ( oldmode | SLEEP ); // sleep Log . i ( TAG , \"newmode:\" + newmode ); mDevice . writeRegByte ( MODE1 ,( byte ) newmode ); Log . i ( TAG , \"prescale:\" + prescale ); mDevice . writeRegByte ( PRE_SCALE , ( byte ) prescale ); mDevice . writeRegByte ( MODE1 ,( byte ) oldmode ); Log . i ( TAG , \"oldmode:\" + oldmode ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } mDevice . writeRegByte ( MODE1 , ( byte ) ( oldmode | RESTART )); Log . i ( TAG , \"restart:\" + ( oldmode | RESTART )); } catch ( IOException e ) { e . printStackTrace (); } } /*private int calc_prescale(int hz){ return (int) (Math.round(OSC_CLOCK/4096/(float)hz)-1); }*/ private void set_all_pwm ( int on , int off ){ try { mDevice . writeRegByte ( ALL_LED_ON_L , ( byte ) ( on & 0xFF )); mDevice . writeRegByte ( ALL_LED_ON_H , ( byte ) ( on >> 8 )); mDevice . writeRegByte ( ALL_LED_OFF_L , ( byte ) ( off & 0xFF )); mDevice . writeRegByte ( ALL_LED_OFF_H , ( byte ) ( off >> 8 )); } catch ( IOException e ) { e . printStackTrace (); } } private void set_channel_value ( int channel , int on , int off ) { try { mDevice . writeRegByte ( LED0_ON_L + channel * 4 , ( byte ) ( on & 0xFF )); mDevice . writeRegByte ( LED0_ON_H + channel * 4 , ( byte ) ( on >> 8 )); mDevice . writeRegByte ( LED0_OFF_L + channel * 4 , ( byte ) ( off & 0xFF )); mDevice . writeRegByte ( LED0_OFF_H + channel * 4 , ( byte ) ( off >> 8 )); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { setValue ( 0 , true , 5 , 100 , 2000 ); setValue ( 1 , true , 5 , 30 , 2000 ); setValue ( 2 , true , 10 , 100 , 2000 ); setValue ( 3 , true , 10 , 300 , 2000 ); setValue ( 4 , true , 10 , 100 , 2000 ); setValue ( 0 , false , 5 , 100 , 2000 ); setValue ( 1 , false , 5 , 30 , 2000 ); setValue ( 2 , false , 10 , 100 , 2000 ); setValue ( 3 , false , 10 , 300 , 2000 ); setValue ( 4 , false , 10 , 100 , 2000 ); } }; private void setValue ( int channel , boolean turn , int hz , int value , int time ) { try { mLedGpio [ channel ]. setValue ( turn ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } //set_channel_value(4, 0, 0); set_hz ( hz ); set_channel_value ( channel , 0 , value ); try { Thread . sleep (( long ) time ); } catch ( InterruptedException e ) { e . printStackTrace (); } set_channel_value ( channel , 0 , 0 ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); for ( int i = 0 ; i < mLedGpio . length ; i ++) { if ( mLedGpio [ i ] != null ) { try { mLedGpio [ i ]. close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } }","title":"RobotARM"},{"location":"robotarm/#robotarm","text":"6DOF RobotARM\u306e\u5236\u5fa1","title":"RobotARM"},{"location":"robotarm/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 package com.gclue.restfullarm ; import android.app.Activity ; import android.os.Handler ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.Gpio ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; import static java.lang.Math.* ; public class MainActivity extends Activity { private final static String TAG = \"THINGS\" ; private Gpio [] mLedGpio = new Gpio [ 5 ]; private String [] PIN_NAME = { \"BCM4\" , \"BCM5\" , \"BCM6\" , \"BCM12\" , \"BCM21\" }; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private Boolean trigger = false ; private I2cDevice mDevice ; // I2C Device Name private static final String I2C_DEVICE_NAME = \"I2C1\" ; // I2C Slave Address private static final double OSC_CLOCK = 25000000.0 ; private static final int I2C_ADDRESS = 0x40 ; private static final int MODE1 = 0x00 ; // Mode register 1 private static final int MODE2 = 0x01 ; // Mode register 2 private static final int ALL_LED_ON_L = 0xFA ; // load all the LEDn_ON registers, byte 0 private static final int ALL_LED_ON_H = 0xFB ; // load all the LEDn_ON registers, byte 1 private static final int ALL_LED_OFF_L = 0xFC ; // load all the LEDn_OFF registers, byte 0 private static final int ALL_LED_OFF_H = 0xFD ; // load all the LEDn_OFF registers, byte 1 private static final int ALLCALL = 0x01 ; private static final int OUTDRV = 0x04 ; // 2bit private static final int SLEEP = 0x10 ; private static final int PRE_SCALE = 0xFE ; // prescaler for PWM output frequency private static final int RESTART = 0x80 ; private static final int LED0_ON_L = 0x06 ; private static final int LED0_ON_H = 0x07 ; private static final int LED0_OFF_L = 0x08 ; private static final int LED0_OFF_H = 0x09 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); try { for ( int i = 0 ; i < mLedGpio . length ; i ++) { mLedGpio [ i ] = PeripheralManager . getInstance (). openGpio ( PIN_NAME [ i ]); mLedGpio [ i ]. setDirection ( Gpio . DIRECTION_OUT_INITIALLY_LOW ); } mDevice = PeripheralManager . getInstance (). openI2cDevice ( I2C_DEVICE_NAME , I2C_ADDRESS ); init (); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } private void init () { // \u901a\u96fb\u6642\u3001PCA9685\u306e\u5168channle\u306e\u5024\u306f\u3001\u30b5\u30fc\u30dc\u7a3c\u50cd\u7bc4\u56f2\u5916\u306e4096\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092\u9069\u5207\u306a\u7bc4\u56f2\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f int default_value = 300 ; try { set_all_pwm ( 0 , 0 ); /*mDevice.writeRegByte(ALL_LED_ON_L,(byte)0x00); mDevice.writeRegByte(ALL_LED_ON_H,(byte)0x00); mDevice.writeRegByte(ALL_LED_OFF_L,(byte)(default_value & (byte)0xFF)); mDevice.writeRegByte(ALL_LED_OFF_H,(byte)(default_value >> 8));*/ mDevice . writeRegByte ( MODE2 ,( byte )( OUTDRV )); mDevice . writeRegByte ( MODE1 ,( byte )( ALLCALL )); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } // \u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u306a\u3089\u89e3\u9664\u3059\u308b byte mode = mDevice . readRegByte ( MODE1 ); mode = ( byte ) ( mode & ~ SLEEP ); // SLEEP\u30d3\u30c3\u30c8\u3092\u9664\u53bb\u3059\u308b mDevice . writeRegByte ( MODE1 , mode ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } } catch ( IOException e ) { e . printStackTrace (); } } private void set_hz ( int hz ){ //int prescale = calc_prescale(hz); double prescaleval = 25000000.0 ; // # 25MHz prescaleval /= 4096.0 ; // # 12-bit prescaleval /= ( float ) hz ; prescaleval -= 1.0 ; int prescale = ( int )( Math . floor ( prescaleval + 0.5 )); byte oldmode = 0 ; try { oldmode = mDevice . readRegByte ( MODE1 ); Log . i ( TAG , \"oldmode:\" + oldmode ); byte newmode = ( byte ) ( oldmode | SLEEP ); // sleep Log . i ( TAG , \"newmode:\" + newmode ); mDevice . writeRegByte ( MODE1 ,( byte ) newmode ); Log . i ( TAG , \"prescale:\" + prescale ); mDevice . writeRegByte ( PRE_SCALE , ( byte ) prescale ); mDevice . writeRegByte ( MODE1 ,( byte ) oldmode ); Log . i ( TAG , \"oldmode:\" + oldmode ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } mDevice . writeRegByte ( MODE1 , ( byte ) ( oldmode | RESTART )); Log . i ( TAG , \"restart:\" + ( oldmode | RESTART )); } catch ( IOException e ) { e . printStackTrace (); } } /*private int calc_prescale(int hz){ return (int) (Math.round(OSC_CLOCK/4096/(float)hz)-1); }*/ private void set_all_pwm ( int on , int off ){ try { mDevice . writeRegByte ( ALL_LED_ON_L , ( byte ) ( on & 0xFF )); mDevice . writeRegByte ( ALL_LED_ON_H , ( byte ) ( on >> 8 )); mDevice . writeRegByte ( ALL_LED_OFF_L , ( byte ) ( off & 0xFF )); mDevice . writeRegByte ( ALL_LED_OFF_H , ( byte ) ( off >> 8 )); } catch ( IOException e ) { e . printStackTrace (); } } private void set_channel_value ( int channel , int on , int off ) { try { mDevice . writeRegByte ( LED0_ON_L + channel * 4 , ( byte ) ( on & 0xFF )); mDevice . writeRegByte ( LED0_ON_H + channel * 4 , ( byte ) ( on >> 8 )); mDevice . writeRegByte ( LED0_OFF_L + channel * 4 , ( byte ) ( off & 0xFF )); mDevice . writeRegByte ( LED0_OFF_H + channel * 4 , ( byte ) ( off >> 8 )); } catch ( IOException e ) { e . printStackTrace (); } } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { setValue ( 0 , true , 5 , 100 , 2000 ); setValue ( 1 , true , 5 , 30 , 2000 ); setValue ( 2 , true , 10 , 100 , 2000 ); setValue ( 3 , true , 10 , 300 , 2000 ); setValue ( 4 , true , 10 , 100 , 2000 ); setValue ( 0 , false , 5 , 100 , 2000 ); setValue ( 1 , false , 5 , 30 , 2000 ); setValue ( 2 , false , 10 , 100 , 2000 ); setValue ( 3 , false , 10 , 300 , 2000 ); setValue ( 4 , false , 10 , 100 , 2000 ); } }; private void setValue ( int channel , boolean turn , int hz , int value , int time ) { try { mLedGpio [ channel ]. setValue ( turn ); try { Thread . sleep (( long ) 50 ); } catch ( InterruptedException e ) { e . printStackTrace (); } //set_channel_value(4, 0, 0); set_hz ( hz ); set_channel_value ( channel , 0 , value ); try { Thread . sleep (( long ) time ); } catch ( InterruptedException e ) { e . printStackTrace (); } set_channel_value ( channel , 0 , 0 ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); for ( int i = 0 ; i < mLedGpio . length ; i ++) { if ( mLedGpio [ i ] != null ) { try { mLedGpio [ i ]. close (); } catch ( IOException e ) { Log . e ( TAG , \"Error on PeripheralIO API\" , e ); } } } } }","title":"\u30bd\u30fc\u30b9"},{"location":"servo/","text":"Servo PWM\u3067\u3001\u30b5\u30fc\u30d0\u3092\u64cd\u4f5c\u3059\u308b\u3002 \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.PeripheralManagerService ; import com.google.android.things.pio.Pwm ; import java.io.IOException ; public class MainActivity extends AppCompatActivity { Servo mServo ; private final static String TAG = \"THINGS\" ; private Pwm mPwm ; private static final String PWM_NAME = \"PWM1\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private int freqValue = 100 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); PeripheralManagerService manager = new PeripheralManagerService (); try { mPwm = manager . openPwm ( PWM_NAME ); initializePwm ( mPwm ); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Unable to access PWM\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); if ( mPwm != null ) { try { mPwm . close (); mPwm = null ; } catch ( IOException e ) { Log . e ( TAG , \"Unable to close PWM\" , e ); } } } public void initializePwm ( Pwm pwm ) throws IOException { pwm . setPwmFrequencyHz ( 120 ); pwm . setPwmDutyCycle ( 25 ); pwm . setEnabled ( true ); } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { if ( mPwm == null ) { return ; } try { freqValue += 10 ; if ( freqValue > 300 ) { freqValue = 100 ; } mPwm . setPwmFrequencyHz ( freqValue ); mHandler . postDelayed ( mBlinkRunnable , INTERVAL_BETWEEN_BLINKS_MS ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PWM\" , e ); } } }; }","title":"Servo"},{"location":"servo/#servo","text":"PWM\u3067\u3001\u30b5\u30fc\u30d0\u3092\u64cd\u4f5c\u3059\u308b\u3002","title":"Servo"},{"location":"servo/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 package com.gclue.myapplication ; import android.os.Handler ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.PeripheralManagerService ; import com.google.android.things.pio.Pwm ; import java.io.IOException ; public class MainActivity extends AppCompatActivity { Servo mServo ; private final static String TAG = \"THINGS\" ; private Pwm mPwm ; private static final String PWM_NAME = \"PWM1\" ; private Handler mHandler = new Handler (); private static final int INTERVAL_BETWEEN_BLINKS_MS = 1000 ; private int freqValue = 100 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); PeripheralManagerService manager = new PeripheralManagerService (); try { mPwm = manager . openPwm ( PWM_NAME ); initializePwm ( mPwm ); mHandler . post ( mBlinkRunnable ); } catch ( IOException e ) { Log . e ( TAG , \"Unable to access PWM\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); if ( mPwm != null ) { try { mPwm . close (); mPwm = null ; } catch ( IOException e ) { Log . e ( TAG , \"Unable to close PWM\" , e ); } } } public void initializePwm ( Pwm pwm ) throws IOException { pwm . setPwmFrequencyHz ( 120 ); pwm . setPwmDutyCycle ( 25 ); pwm . setEnabled ( true ); } private Runnable mBlinkRunnable = new Runnable () { @Override public void run () { if ( mPwm == null ) { return ; } try { freqValue += 10 ; if ( freqValue > 300 ) { freqValue = 100 ; } mPwm . setPwmFrequencyHz ( freqValue ); mHandler . postDelayed ( mBlinkRunnable , INTERVAL_BETWEEN_BLINKS_MS ); } catch ( IOException e ) { Log . e ( TAG , \"Error on PWM\" , e ); } } }; }","title":"\u30bd\u30fc\u30b9"},{"location":"uart/","text":"UART \u30bd\u30fc\u30b9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 package io.fabo.uartexample ; import android.app.Activity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.PeripheralManager ; import com.google.android.things.pio.UartDevice ; import com.google.android.things.pio.UartDeviceCallback ; import java.io.IOException ; import java.util.List ; public class MainActivity extends Activity { // UART Device Name private UartDevice mDevice ; private static final String TAG = \"UART\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // Attempt to access the UART device try { PeripheralManager manager = PeripheralManager . getInstance (); mDevice = manager . openUartDevice ( BoardDefaults . getUartName ()); configureUartFrame ( mDevice ); mDevice . registerUartDeviceCallback ( mUartCallback ); // Send command. byte [] buffer = {( byte ) 0x63 }; writeUartData ( mDevice , buffer ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access UART device\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close UART device\" , e ); } } } /** * Configure the UART port. * @param uart * @throws IOException */ public void configureUartFrame ( UartDevice uart ) throws IOException { uart . setBaudrate ( 9600 ); uart . setDataSize ( 8 ); uart . setParity ( UartDevice . PARITY_NONE ); uart . setStopBits ( 1 ); } /** * Callback. */ private UartDeviceCallback mUartCallback = new UartDeviceCallback () { @Override public boolean onUartDeviceDataAvailable ( UartDevice uart ) { try { readUartBuffer ( uart ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access UART device\" , e ); } return true ; } @Override public void onUartDeviceError ( UartDevice uart , int error ) { Log . w ( TAG , uart + \": Error event \" + error ); } }; /** * Read uart buffer. * @param uart * @throws IOException */ public void readUartBuffer ( UartDevice uart ) throws IOException { final int maxCount = 8 ; byte [] buffer = new byte [ maxCount ]; int count ; while (( count = uart . read ( buffer , buffer . length )) > 0 ) { Log . d ( TAG , \"Read \" + count + \" bytes from peripheral\" ); } for ( int i = 0 ; i < buffer . length ; i ++) { Log . d ( TAG , i + \":0x\" + Integer . toHexString ( buffer [ i ]& 0xff )); } } /** * Write uart. * @param uart * @param command * @throws IOException */ public void writeUartData ( UartDevice uart , byte [] command ) throws IOException { int count = uart . write ( command , command . length ); for ( int i = 0 ; i < count ; i ++) { Log . d ( TAG , i + \":0x\" + Integer . toHexString ( command [ i ]& 0xff )); } } } AndroidManifest 1 & lt ; uses-permission android : name = \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /& gt ;","title":"UART"},{"location":"uart/#uart","text":"","title":"UART"},{"location":"uart/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 package io.fabo.uartexample ; import android.app.Activity ; import android.os.Bundle ; import android.util.Log ; import com.google.android.things.pio.PeripheralManager ; import com.google.android.things.pio.UartDevice ; import com.google.android.things.pio.UartDeviceCallback ; import java.io.IOException ; import java.util.List ; public class MainActivity extends Activity { // UART Device Name private UartDevice mDevice ; private static final String TAG = \"UART\" ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // Attempt to access the UART device try { PeripheralManager manager = PeripheralManager . getInstance (); mDevice = manager . openUartDevice ( BoardDefaults . getUartName ()); configureUartFrame ( mDevice ); mDevice . registerUartDeviceCallback ( mUartCallback ); // Send command. byte [] buffer = {( byte ) 0x63 }; writeUartData ( mDevice , buffer ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access UART device\" , e ); } } @Override protected void onDestroy () { super . onDestroy (); if ( mDevice != null ) { try { mDevice . close (); mDevice = null ; } catch ( IOException e ) { Log . w ( TAG , \"Unable to close UART device\" , e ); } } } /** * Configure the UART port. * @param uart * @throws IOException */ public void configureUartFrame ( UartDevice uart ) throws IOException { uart . setBaudrate ( 9600 ); uart . setDataSize ( 8 ); uart . setParity ( UartDevice . PARITY_NONE ); uart . setStopBits ( 1 ); } /** * Callback. */ private UartDeviceCallback mUartCallback = new UartDeviceCallback () { @Override public boolean onUartDeviceDataAvailable ( UartDevice uart ) { try { readUartBuffer ( uart ); } catch ( IOException e ) { Log . w ( TAG , \"Unable to access UART device\" , e ); } return true ; } @Override public void onUartDeviceError ( UartDevice uart , int error ) { Log . w ( TAG , uart + \": Error event \" + error ); } }; /** * Read uart buffer. * @param uart * @throws IOException */ public void readUartBuffer ( UartDevice uart ) throws IOException { final int maxCount = 8 ; byte [] buffer = new byte [ maxCount ]; int count ; while (( count = uart . read ( buffer , buffer . length )) > 0 ) { Log . d ( TAG , \"Read \" + count + \" bytes from peripheral\" ); } for ( int i = 0 ; i < buffer . length ; i ++) { Log . d ( TAG , i + \":0x\" + Integer . toHexString ( buffer [ i ]& 0xff )); } } /** * Write uart. * @param uart * @param command * @throws IOException */ public void writeUartData ( UartDevice uart , byte [] command ) throws IOException { int count = uart . write ( command , command . length ); for ( int i = 0 ; i < count ; i ++) { Log . d ( TAG , i + \":0x\" + Integer . toHexString ( command [ i ]& 0xff )); } } }","title":"\u30bd\u30fc\u30b9"},{"location":"uart/#androidmanifest","text":"1 & lt ; uses-permission android : name = \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /& gt ;","title":"AndroidManifest"},{"location":"ui01/","text":"FindViewById activity_xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout> android:id\u3067TextView\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002 1 android : id = \"@+id/testView1\" \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306f\u3001 1 View.findViewById() \u3067XML\u3067\u8a18\u8ff0\u3055\u308c\u305fView\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 http://developer.android.com/intl/ja/reference/android/view/View.html MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package com.gclue.uisample ; import android.app.Activity ; import android.os.Bundle ; import android.widget.TextView ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * <p> * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); TextView mTextView = ( TextView ) findViewById ( R . id . testView1 ); mTextView . setText ( \"TEST Writing\" ); } } TextView\u306e\u80cc\u666f\u306b\u8272\u3092\u3064\u3051\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout> TextView\u306e\u6587\u5b57\u306b\u8272\u3092\u3064\u3051\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout> TEXT\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout> TextView\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"200px\" android:layout_height= \"200px\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout>","title":"FindViewById"},{"location":"ui01/#findviewbyid","text":"activity_xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout> android:id\u3067TextView\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002 1 android : id = \"@+id/testView1\" \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306f\u3001 1 View.findViewById() \u3067XML\u3067\u8a18\u8ff0\u3055\u308c\u305fView\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 http://developer.android.com/intl/ja/reference/android/view/View.html MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 package com.gclue.uisample ; import android.app.Activity ; import android.os.Bundle ; import android.widget.TextView ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * <p> * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); TextView mTextView = ( TextView ) findViewById ( R . id . testView1 ); mTextView . setText ( \"TEST Writing\" ); } }","title":"FindViewById"},{"location":"ui01/#textview","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout>","title":"TextView\u306e\u80cc\u666f\u306b\u8272\u3092\u3064\u3051\u308b"},{"location":"ui01/#textview_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout>","title":"TextView\u306e\u6587\u5b57\u306b\u8272\u3092\u3064\u3051\u308b"},{"location":"ui01/#text","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout>","title":"TEXT\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b"},{"location":"ui01/#textview_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <?xml version=\"1.0\" encoding=\"utf-8\"?> <android.support.constraint.ConstraintLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:app= \"http://schemas.android.com/apk/res-auto\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \"com.gclue.uisample.MainActivity\" > <TextView android:layout_width= \"200px\" android:layout_height= \"200px\" android:text= \"Hello World!\" android:id= \"@+id/testView1\" android:background= \"#ff0000\" android:textColor= \"#00ff00\" android:textSize= \"100px\" app:layout_constraintBottom_toBottomOf= \"parent\" app:layout_constraintLeft_toLeftOf= \"parent\" app:layout_constraintRight_toRightOf= \"parent\" app:layout_constraintTop_toTopOf= \"parent\" /> </android.support.constraint.ConstraintLayout>","title":"TextView\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b"},{"location":"ui02/","text":"XML\u3067\u306eLayout RelativeLayout Android\u3067\u4f7f\u7528\u3067\u304d\u308bLayout\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 LinearLayout RelativeLayout FrameLayout TabletLayout TableRow Button\u3092\u8ffd\u52a0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> View\u306e\u5927\u304d\u3055\u306f\u3001 1 2 android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002 \u5024 \u610f\u5473 wrap_content \u30b3\u30f3\u30c6\u30f3\u30c4\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b match_parent \u89aa\u306e\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b \u753b\u9762\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> \u30b5\u30a4\u30ba\u6307\u5b9a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u6a2a\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u4e0b\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/button2\" android:layout_alignLeft= \"@+id/button2\" /> </RelativeLayout> \u89aa\u306b\u5408\u308f\u305b\u3066\u8a2d\u7f6e \u5de6\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentRight = \"true\" \u5de6\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentRight = \"true\"","title":"XML\u3067\u306eLayout"},{"location":"ui02/#xmllayout","text":"","title":"XML\u3067\u306eLayout"},{"location":"ui02/#relativelayout","text":"Android\u3067\u4f7f\u7528\u3067\u304d\u308bLayout\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 LinearLayout RelativeLayout FrameLayout TabletLayout TableRow","title":"RelativeLayout"},{"location":"ui02/#button","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> View\u306e\u5927\u304d\u3055\u306f\u3001 1 2 android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" \u3067\u6307\u5b9a\u3067\u304d\u308b\u3002 \u5024 \u610f\u5473 wrap_content \u30b3\u30f3\u30c6\u30f3\u30c4\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b match_parent \u89aa\u306e\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u308b \u753b\u9762\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout> \u30b5\u30a4\u30ba\u6307\u5b9a\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> </RelativeLayout>","title":"Button\u3092\u8ffd\u52a0"},{"location":"ui02/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> </RelativeLayout> \u30dc\u30bf\u30f3\u306e\u4e0b\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:text= \"Hello World!\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:id= \"@+id/textView1\" /> <Button android:id= \"@+id/button1\" android:layout_width= \"100px\" android:layout_height= \"200px\" android:layout_toRightOf= \"@+id/textView1\" /> <Button android:id= \"@+id/button2\" android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_toRightOf= \"@+id/button1\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/button2\" android:layout_alignLeft= \"@+id/button2\" /> </RelativeLayout>","title":"\u30dc\u30bf\u30f3\u306e\u6a2a\u306b\u30dc\u30bf\u30f3\u3092\u914d\u7f6e\u3059\u308b"},{"location":"ui02/#_2","text":"\u5de6\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0a\u5bc4\u305b 1 2 android : layout_alignParentTop = \"true\" android : layout_alignParentRight = \"true\" \u5de6\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentLeft = \"true\" \u53f3\u306e\u4e0b\u5bc4\u305b 1 2 android : layout_alignParentBottom = \"true\" android : layout_alignParentRight = \"true\"","title":"\u89aa\u306b\u5408\u308f\u305b\u3066\u8a2d\u7f6e"},{"location":"ui03/","text":"XML\u3067\u306eLayout2 LinearLayout 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello\" android:background= \"#ff0000\" /> </LinearLayout> Verical\u306b\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> Horizontal\u306b\u914d\u7f6e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> Gravity\u3092\u8a2d\u5b9a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:gravity= \"bottom\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> \u53f3\u5bc4\u305b 1 android : gravity = \"right\" \u6c34\u5e73\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center_horizontal\" \u753b\u9762\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center\" \u8ad6\u7406\u548c\u3067\u8a2d\u5b9a 1 android : gravity = \"bottom|right\"","title":"XML\u3067\u306eLayout2"},{"location":"ui03/#xmllayout2","text":"","title":"XML\u3067\u306eLayout2"},{"location":"ui03/#linearlayout","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Hello\" android:background= \"#ff0000\" /> </LinearLayout>","title":"LinearLayout"},{"location":"ui03/#verical","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout>","title":"Verical\u306b\u914d\u7f6e"},{"location":"ui03/#horizontal","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout>","title":"Horizontal\u306b\u914d\u7f6e"},{"location":"ui03/#gravity","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" android:gravity= \"bottom\" android:background= \"#00ff00\" > <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"HelloWorld\" android:background= \"#ff0000\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line2\" android:background= \"#0000ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line3\" android:background= \"#ff00ff\" /> <TextView android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Line4\" android:background= \"#ffff00\" /> </LinearLayout> \u53f3\u5bc4\u305b 1 android : gravity = \"right\" \u6c34\u5e73\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center_horizontal\" \u753b\u9762\u4e2d\u592e\u5bc4\u305b 1 android : gravity = \"center\" \u8ad6\u7406\u548c\u3067\u8a2d\u5b9a 1 android : gravity = \"bottom|right\"","title":"Gravity\u3092\u8a2d\u5b9a"},{"location":"ui04/","text":"Button MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { Toast . makeText ( this , \"TEST\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > </Button> </RelativeLayout> \u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u6539\u826f\u3059\u308b res/drawable/button_anim.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:state_pressed= \"true\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"@android:color/darker_gray\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> <item android:state_pressed= \"false\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"#00a0e9\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> </selector> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" > </Button> </RelativeLayout>","title":"Button"},{"location":"ui04/#button","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package com.example.sasakiakira.uisample2 ; import android.support.v7.app.AppCompatActivity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends AppCompatActivity implements View . OnClickListener { /** Button. */ private Button mButton01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { Toast . makeText ( this , \"TEST\" , Toast . LENGTH_LONG ). show (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > </Button> </RelativeLayout>","title":"Button"},{"location":"ui04/#_1","text":"res/drawable/button_anim.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android= \"http://schemas.android.com/apk/res/android\" > <item android:state_pressed= \"true\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"@android:color/darker_gray\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> <item android:state_pressed= \"false\" > <shape android:shape= \"rectangle\" android:useLevel= \"false\" > <solid android:color= \"#00a0e9\" /> <stroke android:color= \"#CCCCCC\" android:width= \"1dp\" /> <corners android:radius= \"10dp\" /> </shape> </item> </selector> activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:background= \"@drawable/button_anim\" > </Button> </RelativeLayout>","title":"\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u6539\u826f\u3059\u308b"},{"location":"ui05/","text":"TextView MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( \"Button Clicked\" ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:id= \"@+id/textView01\" android:textColor= \"#ffffff\" android:background= \"#000000\" android:layout_centerHorizontal= \"true\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/textView01\" > </Button> </RelativeLayout>","title":"TextView"},{"location":"ui05/#textview","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( \"Button Clicked\" ); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:id= \"@+id/textView01\" android:textColor= \"#ffffff\" android:background= \"#000000\" android:layout_centerHorizontal= \"true\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/textView01\" > </Button> </RelativeLayout>","title":"TextView"},{"location":"ui06/","text":"EditText MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; /** EditText. */ private EditText mEditText01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); mEditText01 = ( EditText ) findViewById ( R . id . editText01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( mEditText01 . getText ()); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:id= \"@+id/textView01\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:textColor= \"#ffffff\" android:background= \"#000000\" /> <EditText android:id= \"@+id/editText01\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:background= \"#D3D3D3\" android:textSize= \"50px\" android:layout_below= \"@+id/textView01\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/editText01\" > </Button> </RelativeLayout>","title":"EditText"},{"location":"ui06/#edittext","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; public class MainActivity extends Activity implements View . OnClickListener { /** Button. */ private Button mButton01 ; /** TextView. */ private TextView mTextView01 ; /** EditText. */ private EditText mEditText01 ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mButton01 = ( Button ) findViewById ( R . id . button01 ); mButton01 . setOnClickListener ( this ); mTextView01 = ( TextView ) findViewById ( R . id . textView01 ); mEditText01 = ( EditText ) findViewById ( R . id . editText01 ); } @Override public void onClick ( View v ) { if ( v . equals ( mButton01 )) { mTextView01 . setText ( mEditText01 . getText ()); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 <?xml version=\"1.0\" encoding=\"utf-8\"?> <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" tools:context= \".MainActivity\" > <TextView android:id= \"@+id/textView01\" android:layout_width= \"match_parent\" android:layout_height= \"wrap_content\" android:text= \"TEST\" android:textSize= \"50px\" android:textColor= \"#ffffff\" android:background= \"#000000\" /> <EditText android:id= \"@+id/editText01\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:background= \"#D3D3D3\" android:textSize= \"50px\" android:layout_below= \"@+id/textView01\" /> <Button android:id= \"@+id/button01\" android:text= \"buttonSample1\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:layout_below= \"@+id/editText01\" > </Button> </RelativeLayout>","title":"EditText"},{"location":"ui07/","text":"\u96fb\u5353\u306e\u4f5c\u6210 \u96fb\u5353\u306eDisplay activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"1000\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> </LinearLayout> \u30ad\u30fc activity_main.xmlxml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:id= \"@+id/display\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button7\" android:text= \"7\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button8\" android:text= \"8\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button9\" android:text= \"9\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonClear\" android:text= \"C\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button4\" android:text= \"4\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button5\" android:text= \"5\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button6\" android:text= \"6\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonPlus\" android:text= \"+\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button1\" android:text= \"1\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button2\" android:text= \"2\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button3\" android:text= \"3\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonMinus\" android:text= \"-\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button0\" android:text= \"0\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonTen\" android:text= \".\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonEqual\" android:text= \"=\" android:textSize= \"40dip\" android:layout_width= \"160dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> </LinearLayout> \u30af\u30ea\u30a2\u306e\u307f\u304c\u6709\u52b9\u306a\u30b5\u30f3\u30d7\u30eb MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u306e\u914d\u5217. */ private Button mButton []; /** Button\u306eId\u306e\u914d\u5217. */ int mId [] = { R . id . button0 , R . id . button1 , R . id . button2 , R . id . button3 , R . id . button4 , R . id . button5 , R . id . button6 , R . id . button7 , R . id . button8 , R . id . button9 , R . id . buttonPlus , R . id . buttonMinus , R . id . buttonEqual , R . id . buttonTen , R . id . buttonClear }; /** \u914d\u5217\u306e\u5834\u6240\u3092\u5b9a\u6570\u5316. */ private final int KEY_0 = 0 ; private final int KEY_1 = 1 ; private final int KEY_2 = 2 ; private final int KEY_3 = 3 ; private final int KEY_4 = 4 ; private final int KEY_5 = 5 ; private final int KEY_6 = 6 ; private final int KEY_7 = 7 ; private final int KEY_8 = 8 ; private final int KEY_9 = 9 ; private final int KEY_PLUS = 10 ; private final int KEY_MINUS = 11 ; private final int KEY_EQUAL = 12 ; private final int KEY_TEN = 13 ; private final int KEY_CLEAR = 14 ; /** \u96fb\u5353\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4. */ private TextView mTextView ; /** \u5408\u8a08\u5024. */ private int total ; /** 1\u3064\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301. */ private int beforeStatus ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextView mTextView = ( TextView ) findViewById ( R . id . display ); // Button mButton = new Button [ mId . length ]; // Button\u306e\u53d6\u308a\u8fbc\u307f\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u306f\u308a\u3064\u3051 for ( int i = 0 ; i < mId . length ; i ++){ // button\u3092\u53d6\u308a\u8fbc\u3080 mButton [ i ] = ( Button ) findViewById ( mId [ i ]); // button\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406 mButton [ i ]. setOnClickListener ( this ); } } @Override public void onClick ( View v ) { // \u62bc\u3055\u308c\u305f\u30dc\u30bf\u30f3\u304c\u3069\u306e\u30dc\u30bf\u30f3\u304b\u3092\u5224\u5b9a for ( int i = 0 ; i < mId . length ; i ++) { if ( v . equals ( mButton [ i ])) { // CLEAR if ( i == KEY_CLEAR ) { mTextView . setText ( \"\" ); total = 0 ; beforeStatus = KEY_CLEAR ; } // \u6570\u5b57 else if ( i < 10 ) { String nowValue = mTextView . getText (). toString (); nowValue = nowValue + i ; mTextView . setText ( nowValue ); beforeStatus = i ; } break ; } } } } \u8ab2\u984c1 +-.%\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002 TextView\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u5217(String)\u3092Int\u578b\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002 1 2 String nowValue = mTextView.getText().toString(); int value = Integer.parseInt(nowValue); \u3053\u308c\u3067String\u3092Int\u306b\u5909\u63db\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002 \u8ab2\u984c2 \u304a\u304b\u3057\u306a\u6319\u52d5\u3084\u3001\u304a\u304b\u3057\u306a\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306e\u5bfe\u51e6\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002 \u4f8b\uff09 1,+\u3068\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f \u4f55\u3082\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u306b+\u3084-\u3084=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f 0\u3060\u3051\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u4ed6\u306e\u6570\u5b57\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f 100\u6841\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\uff1f * etc...","title":"\u96fb\u5353\u306e\u4f5c\u6210"},{"location":"ui07/#_1","text":"","title":"\u96fb\u5353\u306e\u4f5c\u6210"},{"location":"ui07/#display","text":"activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"1000\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> </LinearLayout>","title":"\u96fb\u5353\u306eDisplay"},{"location":"ui07/#_2","text":"activity_main.xmlxml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" android:orientation= \"vertical\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" > <TextView android:id= \"@+id/display\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" android:text= \"\" android:textSize= \"60dip\" android:textColor= \"#f39800\" android:gravity= \"right\" android:background= \"#999999\" /> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button7\" android:text= \"7\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button8\" android:text= \"8\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button9\" android:text= \"9\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonClear\" android:text= \"C\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button4\" android:text= \"4\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button5\" android:text= \"5\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button6\" android:text= \"6\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonPlus\" android:text= \"+\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button1\" android:text= \"1\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button2\" android:text= \"2\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/button3\" android:text= \"3\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonMinus\" android:text= \"-\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> <LinearLayout android:gravity= \"center_horizontal\" android:orientation= \"horizontal\" android:layout_width= \"fill_parent\" android:layout_height= \"wrap_content\" > <Button android:id= \"@+id/button0\" android:text= \"0\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonTen\" android:text= \".\" android:textSize= \"40dip\" android:layout_width= \"80dip\" android:layout_height= \"80dip\" > </Button> <Button android:id= \"@+id/buttonEqual\" android:text= \"=\" android:textSize= \"40dip\" android:layout_width= \"160dip\" android:layout_height= \"80dip\" > </Button> </LinearLayout> </LinearLayout> \u30af\u30ea\u30a2\u306e\u307f\u304c\u6709\u52b9\u306a\u30b5\u30f3\u30d7\u30eb MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 package com.gclue.myapplication ; import android.app.Activity ; import android.os.Bundle ; import android.view.View ; import android.widget.Button ; import android.widget.EditText ; import android.widget.TextView ; import android.widget.Toast ; public class MainActivity extends Activity implements View . OnClickListener { /** Button\u306e\u914d\u5217. */ private Button mButton []; /** Button\u306eId\u306e\u914d\u5217. */ int mId [] = { R . id . button0 , R . id . button1 , R . id . button2 , R . id . button3 , R . id . button4 , R . id . button5 , R . id . button6 , R . id . button7 , R . id . button8 , R . id . button9 , R . id . buttonPlus , R . id . buttonMinus , R . id . buttonEqual , R . id . buttonTen , R . id . buttonClear }; /** \u914d\u5217\u306e\u5834\u6240\u3092\u5b9a\u6570\u5316. */ private final int KEY_0 = 0 ; private final int KEY_1 = 1 ; private final int KEY_2 = 2 ; private final int KEY_3 = 3 ; private final int KEY_4 = 4 ; private final int KEY_5 = 5 ; private final int KEY_6 = 6 ; private final int KEY_7 = 7 ; private final int KEY_8 = 8 ; private final int KEY_9 = 9 ; private final int KEY_PLUS = 10 ; private final int KEY_MINUS = 11 ; private final int KEY_EQUAL = 12 ; private final int KEY_TEN = 13 ; private final int KEY_CLEAR = 14 ; /** \u96fb\u5353\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4. */ private TextView mTextView ; /** \u5408\u8a08\u5024. */ private int total ; /** 1\u3064\u524d\u306e\u72b6\u614b\u3092\u4fdd\u6301. */ private int beforeStatus ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); // TextView mTextView = ( TextView ) findViewById ( R . id . display ); // Button mButton = new Button [ mId . length ]; // Button\u306e\u53d6\u308a\u8fbc\u307f\u3068\u30a4\u30d9\u30f3\u30c8\u306e\u306f\u308a\u3064\u3051 for ( int i = 0 ; i < mId . length ; i ++){ // button\u3092\u53d6\u308a\u8fbc\u3080 mButton [ i ] = ( Button ) findViewById ( mId [ i ]); // button\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406 mButton [ i ]. setOnClickListener ( this ); } } @Override public void onClick ( View v ) { // \u62bc\u3055\u308c\u305f\u30dc\u30bf\u30f3\u304c\u3069\u306e\u30dc\u30bf\u30f3\u304b\u3092\u5224\u5b9a for ( int i = 0 ; i < mId . length ; i ++) { if ( v . equals ( mButton [ i ])) { // CLEAR if ( i == KEY_CLEAR ) { mTextView . setText ( \"\" ); total = 0 ; beforeStatus = KEY_CLEAR ; } // \u6570\u5b57 else if ( i < 10 ) { String nowValue = mTextView . getText (). toString (); nowValue = nowValue + i ; mTextView . setText ( nowValue ); beforeStatus = i ; } break ; } } } }","title":"\u30ad\u30fc"},{"location":"ui07/#1","text":"+-.%\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002 TextView\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u5217(String)\u3092Int\u578b\u306b\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002 1 2 String nowValue = mTextView.getText().toString(); int value = Integer.parseInt(nowValue); \u3053\u308c\u3067String\u3092Int\u306b\u5909\u63db\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u8ab2\u984c1"},{"location":"ui07/#2","text":"\u304a\u304b\u3057\u306a\u6319\u52d5\u3084\u3001\u304a\u304b\u3057\u306a\u64cd\u4f5c\u3092\u3057\u305f\u5834\u5408\u306e\u5bfe\u51e6\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002 \u4f8b\uff09 1,+\u3068\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f \u4f55\u3082\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u306b+\u3084-\u3084=\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f 0\u3060\u3051\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u4ed6\u306e\u6570\u5b57\u30ad\u30fc\u304c\u62bc\u3055\u308c\u305f\u3089\uff1f 100\u6841\u306e\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u3089\uff1f * etc...","title":"\u8ab2\u984c2"},{"location":"update/","text":"Android Things Console https://partner.android.com/things/console/ Setup Utility https://partner.android.com/things/console/u/0/?pli=1#/tools Android Things Update OSX\u306f\u3001AndroidSDK\u00a5platform-tools\u306b\u30d1\u30b9\u3092\u901a\u3057\u3066\u304a\u304f\u3002 1 vi ~/.bash_profile 1 2 3 4 ... export ANDROID_TOOL=/Users/akira/Library/Android/sdk/platform-tools ... export PATH=$PATH:$ANDROID_TOOL 1 source ~/.bash_profile 1 echo $PATH OSX 1 $ sudo android-things-setup-utility Windows\u306f\u7ba1\u7406\u8005\u306e\u6a29\u9650\u3067\u3001android-things-setup-utility.exe \u3092\u5b9f\u884c flash-all.sh\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb 1 $ adb reboot bootloader Fastboot mode\u3067 1 $ flash-all.sh","title":"Android Things Console"},{"location":"update/#android-things-console","text":"https://partner.android.com/things/console/","title":"Android Things Console"},{"location":"update/#setup-utility","text":"https://partner.android.com/things/console/u/0/?pli=1#/tools","title":"Setup Utility"},{"location":"update/#android-things-update","text":"OSX\u306f\u3001AndroidSDK\u00a5platform-tools\u306b\u30d1\u30b9\u3092\u901a\u3057\u3066\u304a\u304f\u3002 1 vi ~/.bash_profile 1 2 3 4 ... export ANDROID_TOOL=/Users/akira/Library/Android/sdk/platform-tools ... export PATH=$PATH:$ANDROID_TOOL 1 source ~/.bash_profile 1 echo $PATH OSX 1 $ sudo android-things-setup-utility Windows\u306f\u7ba1\u7406\u8005\u306e\u6a29\u9650\u3067\u3001android-things-setup-utility.exe \u3092\u5b9f\u884c","title":"Android Things Update"},{"location":"update/#flash-allsh","text":"1 $ adb reboot bootloader Fastboot mode\u3067 1 $ flash-all.sh","title":"flash-all.sh\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"userdriver/","text":"UserDriver \u81ea\u4f5c\u3057\u305fDriver\u306f\u3001UserDriver\u3068\u3057\u3066\u30a2\u30d7\u30ea\u306b\u7d44\u307f\u8fbc\u3080\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002 Adx345.javapackage com.gclue.adx345 ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class Adx345 implements AutoCloseable { private static final String TAG = Adx345 . class . getSimpleName (); /** * I2C slave address of the Adx345. */ public static final int I2C_ADDRESS = 0x53 ; /** * Sampling rate of the measurement. */ /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** name of adx345 */ private byte ADXL345_DEVICE_NAME = ( byte ) 0xE5 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; private I2cDevice mDevice ; /** * Create a new Adx345 driver connected to the given I2C bus. * @param bus * @throws IOException */ public Adx345 ( String bus ) throws IOException { PeripheralManager pioService = PeripheralManager . getInstance (); I2cDevice device = pioService . openI2cDevice ( bus , I2C_ADDRESS ); try { connect ( device ); } catch ( IOException | RuntimeException e ) { try { close (); } catch ( IOException | RuntimeException ignored ) { } throw e ; } } /** * Create a new Adx345 driver connected to the given I2C device. * @param device * @throws IOException */ /*package*/ Adx345 ( I2cDevice device ) throws IOException { connect ( device ); } private void connect ( I2cDevice device ) throws IOException { if ( mDevice != null ) { throw new IllegalStateException ( \"device already connected\" ); } mDevice = device ; } /** * Close the driver and the underlying device. */ @Override public void close () throws IOException { if ( mDevice != null ) { try { mDevice . close (); } finally { mDevice = null ; } } } /** * Who am I . * @return find or not find. */ public boolean whoAmI () { try { byte value = mDevice . readRegByte ( ADXL345_DEVID_REG ); if (( value & 0xff ) == ADXL345_DEVICE_NAME ) { return true ; } else { return false ; } } catch ( IOException e ) { return false ; } } /** * Set configure. */ public void setConfigure () { byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; try { mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); } catch ( IOException e ) { e . printStackTrace (); } } /** * Power on. */ public void powerOn () { byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; try { mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); } catch ( IOException e ) { e . printStackTrace (); } } /** * Read an accelerometer sample. * @return acceleration over xyz axis in G. * @throws IOException * @throws IllegalStateException */ public float [] readSample () throws IOException , IllegalStateException { if ( mDevice == null ) { throw new IllegalStateException ( \"device not connected\" ); } int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; return new float []{ x , y , z }; } } Adx345AccelerometerDriver.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 package com.gclue.adx345 ; import android.hardware.Sensor ; import android.hardware.SensorManager ; import com.google.android.things.userdriver.UserDriverManager ; import com.google.android.things.userdriver.sensor.UserSensor ; import com.google.android.things.userdriver.sensor.UserSensorDriver ; import com.google.android.things.userdriver.sensor.UserSensorReading ; import java.io.IOException ; import java.util.UUID ; public class Adx345AccelerometerDriver implements AutoCloseable { private static final String TAG = Adx345AccelerometerDriver . class . getSimpleName (); private static final String DRIVER_NAME = \"FaBoAccelerometer\" ; private static final String DRIVER_VENDOR = \"GClue\" ; private static final int DRIVER_VERSION = 1 ; private Adx345 mDevice ; private UserSensor mUserSensor ; /** * Create a new framework accelerometer driver connected to the given I2C bus. * The driver emits {@link android.hardware.Sensor} with acceleration data when registered. * @param bus * @throws IOException * @see #register() */ public Adx345AccelerometerDriver ( String bus ) throws IOException { mDevice = new Adx345 ( bus ); } /** * Close the driver and the underlying device. * @throws IOException */ @Override public void close () throws IOException { unregister (); if ( mDevice != null ) { try { mDevice . close (); } finally { mDevice = null ; } } } /** * Register the driver in the framework. * @see #unregister() */ public void register () { if ( mDevice == null ) { throw new IllegalStateException ( \"cannot registered closed driver\" ); } if ( mUserSensor == null ) { mUserSensor = build ( mDevice ); UserDriverManager . getInstance (). registerSensor ( mUserSensor ); } } /** * Unregister the driver from the framework. */ public void unregister () { if ( mUserSensor != null ) { UserDriverManager . getInstance (). unregisterSensor ( mUserSensor ); mUserSensor = null ; } } static UserSensor build ( final Adx345 adx345 ) { return new UserSensor . Builder () . setType ( Sensor . TYPE_ACCELEROMETER ) . setName ( DRIVER_NAME ) . setVendor ( DRIVER_VENDOR ) . setVersion ( DRIVER_VERSION ) . setUuid ( UUID . randomUUID ()) . setDriver ( new UserSensorDriver () { @Override public UserSensorReading read () throws IOException { float [] sample = adx345 . readSample (); return new UserSensorReading ( sample ); } @Override public void setEnabled ( boolean enabled ) throws IOException { if ( enabled ) { adx345 . setConfigure (); adx345 . powerOn (); } else { // ToDo } } }) . build (); } } BoardDefault.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.gclue.adx345 ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package com.gclue.adx345 ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity implements SensorEventListener { private Adx345AccelerometerDriver mAdx345AccelerometerDriver ; private SensorManager mSensorManager ; private static final String TAG = MainActivity . class . getSimpleName (); @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { if ( sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"Accelerometer sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } }); try { mAdx345AccelerometerDriver = new Adx345AccelerometerDriver ( BoardDefaults . getI2CPort ()); mAdx345AccelerometerDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mAdx345AccelerometerDriver != null ) { mSensorManager . unregisterListener ( this ); mAdx345AccelerometerDriver . unregister (); try { mAdx345AccelerometerDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mAdx345AccelerometerDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"Accelerometer event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ]); } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.adx345\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"UserDriver"},{"location":"userdriver/#userdriver","text":"\u81ea\u4f5c\u3057\u305fDriver\u306f\u3001UserDriver\u3068\u3057\u3066\u30a2\u30d7\u30ea\u306b\u7d44\u307f\u8fbc\u3080\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002 Adx345.javapackage com.gclue.adx345 ; import com.google.android.things.pio.I2cDevice ; import com.google.android.things.pio.PeripheralManager ; import java.io.IOException ; public class Adx345 implements AutoCloseable { private static final String TAG = Adx345 . class . getSimpleName (); /** * I2C slave address of the Adx345. */ public static final int I2C_ADDRESS = 0x53 ; /** * Sampling rate of the measurement. */ /** Who_am_i register */ private byte ADXL345_DEVID_REG = 0x00 ; /** name of adx345 */ private byte ADXL345_DEVICE_NAME = ( byte ) 0xE5 ; /** Data Format Control */ private byte ADXL345_DATA_FORMAT_REG = 0x31 ; /** Power-saving features control */ private byte ADXL345_POWER_CTL_REG = 0x2D ; /** Power-saving features control */ private byte ADXL345_3AIXS = 0x32 ; /** SELF Test ON */ private byte ADXL345_SELF_TEST_ON = ( byte ) 0b10000000 ; /** SELF Test OFF */ private byte ADXL345_SELF_TEST_OFF = 0b00000000 ; /** SELF SPI ON */ private byte ADXL345_SPI_ON = 0b01000000 ; /** SELF SPI OFF */ private byte ADXL345_SPI_OFF = 0b00000000 ; /** INT_INVERT ON */ private byte ADXL345_INT_INVERT_ON = 0b00100000 ; /** INT_INVERT OFF */ private byte ADXL345_INT_INVERT_OFF = 0b00000000 ; /** FULL_RES ON */ private byte ADXL345_FULL_RES_ON = 0b00001000 ; /** FULL_RES OFF */ private byte ADXL345_FULL_RES_OFF = 0b00000000 ; /** JUSTIFY ON */ private byte ADXL345_JUSTIFY_ON = 0b00000100 ; /** JUSTIFY OFF */ private byte ADXL345_JUSTIFY_OFF = 0b00000000 ; /** RANGE 2G */ private byte ADXL345_RANGE_2G = 0b00 ; /** RANGE 4G */ private byte ADXL345_RANGE_4G = 0b01 ; /** RANGE 8G */ private byte ADXL345_RANGE_8G = 0b10 ; /** RANGE 16G */ private byte ADXL345_RANGE_16G = 0b11 ; /** AUTO SLEEP ON */ private byte ADXL345_AUTO_SLEEP_ON = 0b00010000 ; /** AUTO SLEEP OFF */ private byte ADXL345_AUTO_SLEEP_OFF = 0b00000000 ; /** AUTO MEASURE ON */ private byte ADXL345_MEASURE_ON = 0b00001000 ; /** AUTO MEASURE OFF */ private byte ADXL345_MEASURE_OFF = 0b00000000 ; /** SLEEP ON */ private byte ADXL345_SLEEP_ON = 0b00000100 ; /** SLEEP OFF */ private byte ADXL345_SLEEP_OFF = 0b00000000 ; /** WAKEUP 8Hz */ private byte ADXL345_WAKEUP_8HZ = 0b00 ; /** WAKEUP 4Hz */ private byte ADXL345_WAKEUP_4HZ = 0b01 ; /** WAKEUP 2Hz */ private byte ADXL345_WAKEUP_2HZ = 0b10 ; /** WAKEUP 1Hz */ private byte ADXL345_WAKEUP_1HZ = 0b11 ; private I2cDevice mDevice ; /** * Create a new Adx345 driver connected to the given I2C bus. * @param bus * @throws IOException */ public Adx345 ( String bus ) throws IOException { PeripheralManager pioService = PeripheralManager . getInstance (); I2cDevice device = pioService . openI2cDevice ( bus , I2C_ADDRESS ); try { connect ( device ); } catch ( IOException | RuntimeException e ) { try { close (); } catch ( IOException | RuntimeException ignored ) { } throw e ; } } /** * Create a new Adx345 driver connected to the given I2C device. * @param device * @throws IOException */ /*package*/ Adx345 ( I2cDevice device ) throws IOException { connect ( device ); } private void connect ( I2cDevice device ) throws IOException { if ( mDevice != null ) { throw new IllegalStateException ( \"device already connected\" ); } mDevice = device ; } /** * Close the driver and the underlying device. */ @Override public void close () throws IOException { if ( mDevice != null ) { try { mDevice . close (); } finally { mDevice = null ; } } } /** * Who am I . * @return find or not find. */ public boolean whoAmI () { try { byte value = mDevice . readRegByte ( ADXL345_DEVID_REG ); if (( value & 0xff ) == ADXL345_DEVICE_NAME ) { return true ; } else { return false ; } } catch ( IOException e ) { return false ; } } /** * Set configure. */ public void setConfigure () { byte conf = ADXL345_SELF_TEST_OFF ; conf |= ADXL345_SPI_OFF ; conf |= ADXL345_INT_INVERT_OFF ; conf |= ADXL345_FULL_RES_OFF ; conf |= ADXL345_JUSTIFY_OFF ; conf |= ADXL345_RANGE_16G ; try { mDevice . writeRegByte ( ADXL345_DATA_FORMAT_REG , conf ); } catch ( IOException e ) { e . printStackTrace (); } } /** * Power on. */ public void powerOn () { byte power = ADXL345_AUTO_SLEEP_OFF ; power |= ADXL345_MEASURE_ON ; power |= ADXL345_SLEEP_OFF ; power |= ADXL345_WAKEUP_8HZ ; try { mDevice . writeRegByte ( ADXL345_POWER_CTL_REG , power ); } catch ( IOException e ) { e . printStackTrace (); } } /** * Read an accelerometer sample. * @return acceleration over xyz axis in G. * @throws IOException * @throws IllegalStateException */ public float [] readSample () throws IOException , IllegalStateException { if ( mDevice == null ) { throw new IllegalStateException ( \"device not connected\" ); } int length = 6 ; byte axis_buff [] = new byte [ length ]; mDevice . readRegBuffer ( ADXL345_3AIXS , axis_buff , axis_buff . length ); int x = ((( int ) axis_buff [ 1 ]) << 8 ) | axis_buff [ 0 ]; int y = ((( int ) axis_buff [ 3 ]) << 8 ) | axis_buff [ 2 ]; int z = ((( int ) axis_buff [ 5 ]) << 8 ) | axis_buff [ 4 ]; return new float []{ x , y , z }; } } Adx345AccelerometerDriver.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 package com.gclue.adx345 ; import android.hardware.Sensor ; import android.hardware.SensorManager ; import com.google.android.things.userdriver.UserDriverManager ; import com.google.android.things.userdriver.sensor.UserSensor ; import com.google.android.things.userdriver.sensor.UserSensorDriver ; import com.google.android.things.userdriver.sensor.UserSensorReading ; import java.io.IOException ; import java.util.UUID ; public class Adx345AccelerometerDriver implements AutoCloseable { private static final String TAG = Adx345AccelerometerDriver . class . getSimpleName (); private static final String DRIVER_NAME = \"FaBoAccelerometer\" ; private static final String DRIVER_VENDOR = \"GClue\" ; private static final int DRIVER_VERSION = 1 ; private Adx345 mDevice ; private UserSensor mUserSensor ; /** * Create a new framework accelerometer driver connected to the given I2C bus. * The driver emits {@link android.hardware.Sensor} with acceleration data when registered. * @param bus * @throws IOException * @see #register() */ public Adx345AccelerometerDriver ( String bus ) throws IOException { mDevice = new Adx345 ( bus ); } /** * Close the driver and the underlying device. * @throws IOException */ @Override public void close () throws IOException { unregister (); if ( mDevice != null ) { try { mDevice . close (); } finally { mDevice = null ; } } } /** * Register the driver in the framework. * @see #unregister() */ public void register () { if ( mDevice == null ) { throw new IllegalStateException ( \"cannot registered closed driver\" ); } if ( mUserSensor == null ) { mUserSensor = build ( mDevice ); UserDriverManager . getInstance (). registerSensor ( mUserSensor ); } } /** * Unregister the driver from the framework. */ public void unregister () { if ( mUserSensor != null ) { UserDriverManager . getInstance (). unregisterSensor ( mUserSensor ); mUserSensor = null ; } } static UserSensor build ( final Adx345 adx345 ) { return new UserSensor . Builder () . setType ( Sensor . TYPE_ACCELEROMETER ) . setName ( DRIVER_NAME ) . setVendor ( DRIVER_VENDOR ) . setVersion ( DRIVER_VERSION ) . setUuid ( UUID . randomUUID ()) . setDriver ( new UserSensorDriver () { @Override public UserSensorReading read () throws IOException { float [] sample = adx345 . readSample (); return new UserSensorReading ( sample ); } @Override public void setEnabled ( boolean enabled ) throws IOException { if ( enabled ) { adx345 . setConfigure (); adx345 . powerOn (); } else { // ToDo } } }) . build (); } } BoardDefault.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 package com.gclue.adx345 ; /* * Copyright 2016, The Android Open Source Project * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ import android.os.Build ; @SuppressWarnings ( \"WeakerAccess\" ) public class BoardDefaults { private static final String DEVICE_RPI3 = \"rpi3\" ; private static final String DEVICE_IMX6UL_PICO = \"imx6ul_pico\" ; private static final String DEVICE_IMX7D_PICO = \"imx7d_pico\" ; /** * Return the preferred I2C port for each board. */ public static String getI2CPort () { switch ( Build . DEVICE ) { case DEVICE_RPI3 : return \"I2C1\" ; case DEVICE_IMX6UL_PICO : return \"I2C2\" ; case DEVICE_IMX7D_PICO : return \"I2C1\" ; default : throw new IllegalStateException ( \"Unknown Build.DEVICE \" + Build . DEVICE ); } } } MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 package com.gclue.adx345 ; import android.app.Activity ; import android.content.Context ; import android.hardware.Sensor ; import android.hardware.SensorEvent ; import android.hardware.SensorEventListener ; import android.hardware.SensorManager ; import android.os.Bundle ; import android.util.Log ; import java.io.IOException ; /** * Skeleton of an Android Things activity. * <p> * Android Things peripheral APIs are accessible through the class * PeripheralManagerService. For example, the snippet below will open a GPIO pin and * set it to HIGH: * * <pre>{@code * PeripheralManagerService service = new PeripheralManagerService(); * mLedGpio = service.openGpio(\"BCM6\"); * mLedGpio.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW); * mLedGpio.setValue(true); * }</pre> * <p> * For more complex peripherals, look for an existing user-space driver, or implement one if none * is available. * * @see <a href=\"https://github.com/androidthings/contrib-drivers#readme\">https://github.com/androidthings/contrib-drivers#readme</a> */ public class MainActivity extends Activity implements SensorEventListener { private Adx345AccelerometerDriver mAdx345AccelerometerDriver ; private SensorManager mSensorManager ; private static final String TAG = MainActivity . class . getSimpleName (); @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mSensorManager = ( SensorManager ) getSystemService ( Context . SENSOR_SERVICE ); mSensorManager . registerDynamicSensorCallback ( new SensorManager . DynamicSensorCallback () { @Override public void onDynamicSensorConnected ( Sensor sensor ) { if ( sensor . getType () == Sensor . TYPE_ACCELEROMETER ) { Log . i ( TAG , \"Accelerometer sensor connected\" ); mSensorManager . registerListener ( MainActivity . this , sensor , SensorManager . SENSOR_DELAY_NORMAL ); } } }); try { mAdx345AccelerometerDriver = new Adx345AccelerometerDriver ( BoardDefaults . getI2CPort ()); mAdx345AccelerometerDriver . register (); Log . i ( TAG , \"Accelerometer driver registered\" ); } catch ( IOException e ) { Log . e ( TAG , \"Error initializing accelerometer driver: \" , e ); } } @Override public void onDestroy () { super . onDestroy (); if ( mAdx345AccelerometerDriver != null ) { mSensorManager . unregisterListener ( this ); mAdx345AccelerometerDriver . unregister (); try { mAdx345AccelerometerDriver . close (); } catch ( IOException e ) { Log . e ( TAG , \"Error closing accelerometer driver: \" , e ); } finally { mAdx345AccelerometerDriver = null ; } } } @Override public void onSensorChanged ( SensorEvent event ) { Log . i ( TAG , \"Accelerometer event: \" + event . values [ 0 ] + \", \" + event . values [ 1 ] + \", \" + event . values [ 2 ]); } @Override public void onAccuracyChanged ( Sensor sensor , int accuracy ) { } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"com.gclue.adx345\" > <uses-permission android:name= \"com.google.android.things.permission.MANAGE_SENSOR_DRIVERS\" /> <uses-permission android:name= \"com.google.android.things.permission.USE_PERIPHERAL_IO\" /> <application android:label= \"@string/app_name\" > <uses-library android:name= \"com.google.android.things\" /> <activity android:name= \".MainActivity\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"UserDriver"},{"location":"webview01/","text":"WebView\u8868\u793a \u30d7\u30ed\u30b0\u30e9\u30e0\u3067WebView\u3092\u8cbc\u308a\u4ed8\u3051 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); WebView mWebView = new WebView ( this ); mWebView . loadUrl ( \"http://www.gclue.com\" ); setContentView ( mWebView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.websample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest> XML\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u8868\u793a MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { /** WebView. */ private WebView mWebView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout> \u623b\u308b\u30dc\u30bf\u30f3\u3001\u9032\u3080\u30dc\u30bf\u30f3 MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.webkit.WebView ; import android.webkit.WebViewClient ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** WebView. */ private WebView mWebView ; /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button buttonBack ; /** \u9032\u3080\u30dc\u30bf\u30f3. */ private Button buttonGo ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); mWebView . setWebViewClient ( new WebViewClient ()); buttonBack = ( Button ) findViewById ( R . id . buttonBack ); buttonGo = ( Button ) findViewById ( R . id . buttonGo ); buttonBack . setOnClickListener ( this ); buttonGo . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( buttonBack )){ mWebView . goBack (); } else if ( v . equals ( buttonGo )){ mWebView . goForward (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Go\" android:id= \"@+id/buttonGo\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/buttonGo\" /> <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"WebView\u8868\u793a"},{"location":"webview01/#webview","text":"","title":"WebView\u8868\u793a"},{"location":"webview01/#webview_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); WebView mWebView = new WebView ( this ); mWebView . loadUrl ( \"http://www.gclue.com\" ); setContentView ( mWebView ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } AndroidManifest.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android= \"http://schemas.android.com/apk/res/android\" package= \"utsunomiya.gclue.com.websample\" > <uses-permission android:name= \"android.permission.INTERNET\" /> <application android:allowBackup= \"true\" android:icon= \"@mipmap/ic_launcher\" android:label= \"@string/app_name\" android:theme= \"@style/AppTheme\" > <activity android:name= \".MainActivity\" android:label= \"@string/app_name\" > <intent-filter> <action android:name= \"android.intent.action.MAIN\" /> <category android:name= \"android.intent.category.LAUNCHER\" /> </intent-filter> </activity> </application> </manifest>","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3067WebView\u3092\u8cbc\u308a\u4ed8\u3051"},{"location":"webview01/#xml","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.webkit.WebView ; public class MainActivity extends Activity { /** WebView. */ private WebView mWebView ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"XML\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u8868\u793a"},{"location":"webview01/#_1","text":"MainActivity.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 package utsunomiya.gclue.com.websample ; import android.app.Activity ; import android.os.Bundle ; import android.view.Menu ; import android.view.MenuItem ; import android.view.View ; import android.webkit.WebView ; import android.webkit.WebViewClient ; import android.widget.Button ; public class MainActivity extends Activity implements View . OnClickListener { /** WebView. */ private WebView mWebView ; /** \u623b\u308b\u30dc\u30bf\u30f3. */ private Button buttonBack ; /** \u9032\u3080\u30dc\u30bf\u30f3. */ private Button buttonGo ; @Override protected void onCreate ( Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ); setContentView ( R . layout . activity_main ); mWebView = ( WebView ) findViewById ( R . id . webview ); mWebView . loadUrl ( \"http://www.gclue.com\" ); mWebView . setWebViewClient ( new WebViewClient ()); buttonBack = ( Button ) findViewById ( R . id . buttonBack ); buttonGo = ( Button ) findViewById ( R . id . buttonGo ); buttonBack . setOnClickListener ( this ); buttonGo . setOnClickListener ( this ); } @Override public boolean onCreateOptionsMenu ( Menu menu ) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater (). inflate ( R . menu . menu_main , menu ); return true ; } @Override public boolean onOptionsItemSelected ( MenuItem item ) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item . getItemId (); //noinspection SimplifiableIfStatement if ( id == R . id . action_settings ) { return true ; } return super . onOptionsItemSelected ( item ); } @Override public void onClick ( View v ) { if ( v . equals ( buttonBack )){ mWebView . goBack (); } else if ( v . equals ( buttonGo )){ mWebView . goForward (); } } } activity_main.xml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <RelativeLayout xmlns:android= \"http://schemas.android.com/apk/res/android\" xmlns:tools= \"http://schemas.android.com/tools\" android:layout_width= \"match_parent\" android:layout_height= \"match_parent\" android:paddingLeft= \"@dimen/activity_horizontal_margin\" android:paddingRight= \"@dimen/activity_horizontal_margin\" android:paddingTop= \"@dimen/activity_vertical_margin\" android:paddingBottom= \"@dimen/activity_vertical_margin\" tools:context= \".MainActivity\" > <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Go\" android:id= \"@+id/buttonGo\" android:layout_alignParentTop= \"true\" android:layout_alignParentStart= \"true\" /> <Button android:layout_width= \"wrap_content\" android:layout_height= \"wrap_content\" android:text= \"Back\" android:id= \"@+id/buttonBack\" android:layout_alignParentTop= \"true\" android:layout_toEndOf= \"@+id/buttonGo\" /> <WebView android:id= \"@+id/webview\" android:layout_width= \"fill_parent\" android:layout_height= \"fill_parent\" /> </RelativeLayout>","title":"\u623b\u308b\u30dc\u30bf\u30f3\u3001\u9032\u3080\u30dc\u30bf\u30f3"}]}